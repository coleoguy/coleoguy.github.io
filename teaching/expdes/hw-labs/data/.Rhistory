pP2 <- 1-pbinom(1, 73, prob=pP)
pTP2 <- (pPT*pT)/pP2
pTP2
prposthy <- 0.999
prthy <- 0.000001
prpos <- ((0.000001*0.999)+(0.002*0.999999))
((prposthy*prthy)/prpos)
prpos
prposthy <- 0.999
prthy <- 0.000001
prpos <- ((0.000001*0.999)+(0.002*0.999999))
prpos <- 1-pbinom(1, 73, prob=prpos)
((prposthy*prthy)/prpos)
prpos <- ((0.000001*0.999)+(0.002*0.999999))
prpos <- 1-pbinom(1, 73, prob=prpos)
((prposthy*prthy)/prpos)
prpos <- ((0.000001*0.999)+(0.002*0.999999))
((prposthy*prthy)/prpos)
126-47
p_pt <- 0.999
p_t <- 0.01
p_p <- 2/1000 + p_t
p_tp <- p_pt*p_t/p_p
2/1000
p_t
binom.test(572, 1236, p=0.4548, alternative="g")
class <- matrix(c(14,33,43,36), 2, 2)
chisq.test(class)
help(var.test)
x <- c(91.7, 98, 92.7, 91.7, 84.1, 66, 92.7, 94.7, 88.7, 90.7, 93.7, 91.7, 93.7)
hist(x)
1.015/.1708
x <- runif(min=1, max=10, 20)
y <- rnorm(20, mean=x, sd=2)
fit.xy <- lm(y~x)
summary(fit.xy)
fit.xy$residuals
fit.xy$residuals^2
sum(fit.xy$residuals^2)
sum(fit.xy$residuals^2)->total.var
sum(fit.xy$residuals^2)->fit.var
mean(y)
y-mean(y)
sum((y-mean(y))^2)
168-fit.var/168
(168-fit.var)/168
summary(fit.xy)
library(phytools)
help("anc.Bayes")
tree<-pbtree(n=50)
x<-fastBM(tree,sig2=2) # simulate using fastBM
obj<-anc.Bayes(tree,x,ngen=10000) # sample ancestral states
foo <- obj[[1]]
View(foo)
help(ace)
ace.res <- ace(x=x, phy=tree)
colMeans(foo)
x
print(obj,printlen=20) ## estimates
x <- print(obj,printlen=20) ## estimates
range(x)
z <- x+4.74449
z
range(z)
z <- x+abs(min(x))
range(z)
plot(tree)
plot(tree, edge.width=3)
cols <- viridis(10)
library(viridis)
cols <- viridis(10)
plot(tree, edge.width=3, edge.color=cols[round(z)])
cols <- heat.colors(10)
plot(tree, edge.width=3, edge.color=cols[round(z)])
library(viridis)
cols <- viridis(10)
plot(tree, edge.width=3, edge.color=cols[round(z)])
z2 <- z/tree$edge.length
range(z2)
cols <- viridis(396)
plot(tree, edge.width=3, edge.color=cols[round(z2)])
tree<-pbtree(n=50)
x<-fastBM(tree,sig2=2) # simulate using fastBM
x
# simulate data
tree <- pbtree(n = 50)
tips <- fastBM(tree, sig2 = 2 ) # simulate using fastBM
# reconstruct nodes
obj <- anc.Bayes(tree, x, ngen = 10000)
nodes <- print(obj, printlen = 20)
brach.delta <- c()
done <- F
tree <- pbtree(n = 10)
tips <- fastBM(tree, sig2 = 2 ) # simulate using fastBM
obj <- anc.Bayes(tree, x, ngen = 10000)
nodes <- print(obj, printlen = 20)
brach.delta <- c()
done <- F
plot(tree, edge.width=3)
tree <- pbtree(n = 10)
tips <- fastBM(tree, sig2 = 2 ) # simulate using fastBM
obj <- anc.Bayes(tree, tips, ngen = 10000)
nodes <- print(obj, printlen = 20)
tree$edge.length
tree$edge
nodelabels()
help(pbtree)
tree <- rtree(n = 10)
plot(rtree)
plot(rtree, 10)
help(rtree)
tree <- rtree(n = 10)
plot(rtree)
plot(tree)
tree <- rcoal(n = 10)
plot(tree)
nodelabels()
tree$edge
# simulate data
tree <- rcoal(n = 10)
plot(tree)
nodelabels()
tips <- fastBM(tree, sig2 = 2 ) # simulate using fastBM
# reconstruct nodes
obj <- anc.Bayes(tree, tips, ngen = 10000)
nodes <- print(obj, printlen = 20)
brach.delta <- c()
done <- F
vals <- c(nodes,tips)
vals
vals <- c(tips, nodes)
vals
tree$edge
# simulate data
tree <- rcoal(n = 10)
plot(tree)
nodelabels()
tips <- fastBM(tree, sig2 = 2 ) # simulate using fastBM
# reconstruct nodes
obj <- anc.Bayes(tree, tips, ngen = 10000)
nodes <- print(obj, printlen = 20)
vals <- c(tips, nodes)
brach.delta <- c()
done <- F
for(i in 1:nrow(tree$edge){
branch.delta[i] <- (vals[tree$edge[i, 2]] - vals[tree$edge[i, 1]]) / tree$edge.length[i]
}
# simulate data
tree <- rcoal(n = 10)
plot(tree)
nodelabels()
tips <- fastBM(tree, sig2 = 2 ) # simulate using fastBM
# reconstruct nodes
obj <- anc.Bayes(tree, tips, ngen = 10000)
nodes <- print(obj, printlen = 20)
vals <- c(tips, nodes)
brach.delta <- c()
for(i in 1:nrow(tree$edge){
branch.delta[i] <- (vals[tree$edge[i, 2]] - vals[tree$edge[i, 1]]) / tree$edge.length[i]
}
# simulate data
tree <- rcoal(n = 10)
plot(tree)
nodelabels()
tips <- fastBM(tree, sig2 = 2 ) # simulate using fastBM
# reconstruct nodes
obj <- anc.Bayes(tree, tips, ngen = 10000)
nodes <- print(obj, printlen = 20)
vals <- c(tips, nodes)
brach.delta <- c()
for(i in 1:nrow(tree$edge)){
branch.delta[i] <- (vals[tree$edge[i, 2]] - vals[tree$edge[i, 1]]) / tree$edge.length[i]
}
# simulate data
tree <- rcoal(n = 10)
plot(tree)
nodelabels()
tips <- fastBM(tree, sig2 = 2 ) # simulate using fastBM
# reconstruct nodes
obj <- anc.Bayes(tree, tips, ngen = 10000)
nodes <- print(obj, printlen = 20)
vals <- c(tips, nodes)
branch.delta <- c()
for(i in 1:nrow(tree$edge)){
branch.delta[i] <- (vals[tree$edge[i, 2]] - vals[tree$edge[i, 1]]) / tree$edge.length[i]
}
range(branch.delta)
cols <- rainbow(108)[round(branch.delta*10)]
cols <- rainbow(108)[round(branch.delta*10)+58]
plot(tree, edge.width=3, edge.color = cols)
cols
cols <- rainbow(118)[round(branch.delta*10)+58]
plot(tree, edge.width=3, edge.color = cols)
cols <- heat.colors(118)[round(branch.delta*10)+58]
plot(tree, edge.width=3, edge.color = cols)
# simulate data
tree <- rcoal(n = 100)
plot(tree)
nodelabels()
tips <- fastBM(tree, sig2 = 2 ) # simulate using fastBM
# reconstruct nodes
obj <- anc.Bayes(tree, tips, ngen = 10000)
nodes <- print(obj, printlen = 20)
vals <- c(tips, nodes)
branch.delta <- c()
for(i in 1:nrow(tree$edge)){
branch.delta[i] <- (vals[tree$edge[i, 2]] - vals[tree$edge[i, 1]]) / tree$edge.length[i]
}
cols <- heat.colors(118)[round(branch.delta*10)+58]
plot(tree, edge.width=3, edge.color = cols)
range(branch.delta)
x <- runif(from=0, to=100, 100)
help(runif)
x <- runif(min=0, max=100, 100)
x <- runif(min=0, max=100, 100)
y <- rnorm(mean=x, sd=3)
y <- rnorm(mean=x, sd=3, n=100)
plot(x,y)
y <- rnorm(mean=x, sd=20, n=100)
plot(x,y)
cor.test(x,y)
lm(y~x)
summary(lm(y~x))
summary(lm(y~x))
summary(lm(x~y))
cor.test(x,y)
summary(lm(y~x))
cor.test(x,y)
summary(lm(y~x))
cor.test(y,x)
summary(lm(y~x))
summary(lm(x~y))
cor.test(y,x)
summary(lm(x~y))
help(glm)
obs <- c(0,0,0,0,0,
1,1,1,1,1)
pred1 <- c(1,0,1,0,0,
1,0,1,1,0)
pred2 <- c(0,1,1,0,0,
1,0,0,1,1)
fit.logi <- glm(obs ~ pred1 + pred2, family="logit")
fit.logi <- glm(obs ~ pred1 + pred2, family="binomial")
summary(fit.logi)
fit.pois <- glm(obs ~ pred1 + pred2, family="poisson")
summary(fit.pois)
obs <- c(0,0,0,0,0,0,0,0,0,0,
1,1,1,1,1,1,1,1,1,1)
pred1 <- c(1,0,1,0,0,1,0,1,0,0,
1,0,1,1,0,1,0,1,1,0)
pred2 <- c(0,1,1,0,0,0,1,1,0,0,
1,0,0,1,1,1,0,0,1,1)
fit.logi <- glm(obs ~ pred1 + pred2, family="binomial")
summary(fit.logi)
obs <- c(0,0,0,0,0,0,0,0,0,0,
1,1,1,1,1,1,1,1,1,1)
pred1 <- c(1,0,1,0,0,1,0,0,0,0,
1,1,1,1,0,1,0,1,1,0)
pred2 <- c(0,1,0,0,0,0,1,0,0,0,
1,0,0,1,1,1,1,0,1,1)
fit.logi <- glm(obs ~ pred1 + pred2, family="binomial")
summary(fit.logi)
obs <- c(0,0,0,0,0,0,0,0,0,0,
1,1,1,1,1,1,1,1,1,1)
pred1 <- c("a","a","b","a","a","b","a","a","a","a",
"b","b","b","b","a","b","a","b","b","a")
pred2 <- c(0,1,0,0,0,0,1,0,0,0,
1,0,0,1,1,1,1,0,1,1)
fit.logi <- glm(obs ~ pred1 + pred2, family="binomial")
summary(fit.logi)
pred1 <- c("a","a","b","a","a","b","a","a","a","a",
"b","b","b","b","a","b","b","b","b","a")
pred2 <- c(0,1,0,0,0,0,1,0,0,0,
1,0,0,1,1,1,1,0,1,1)
fit.logi <- glm(obs ~ pred1 + pred2, family="binomial")
summary(fit.logi)
fit.logi <- glm(obs ~ pred1 , family="binomial")
summary(fit.logi)
fit.logi <- glm(obs ~ pred2 , family="binomial")
summary(fit.logi)
fit.pois <- glm(obs ~ pred2, family="poisson")
summary(fit.pois)
fit.logi <- glm(obs ~ pred2 , family="binomial")
summary(fit.logi)
summary(fit.pois)
rep(c(1,3),times=50)
x1 <- 1:100
x2 <- rep(c(1,3),times=50)
x3 <- rep(c(1,2,3,4,5,6,7,8,9,10), times=10)
y <- x1/20 + x2, + x3
x1 <- 1:100
x2 <- rep(c(1,3),times=50)
x3 <- rep(c(1,2,3,4,5,6,7,8,9,10), times=10)
y <- x1/20 + x2, + x3
y <- x1/20 + x2 + x3
plot(y~x1)
err <- rnorm(sd=5, 100)
y <- 25 + x1/20 + x2 + x3
plot(y~x1)
x1 <- 1:100
x2 <- rep(c(1,3),times=50)
x3 <- rep(c(1,2,3,4,5,6,7,8,9,10), times=10)
err <- rnorm(sd=5, 100)
y <- 25 + x1/20 + x2 + x3 + err
plot(y~x)
x1 <- 1:100
x2 <- rep(c(1,3),times=50)
x3 <- rep(c(1,2,3,4,5,6,7,8,9,10), times=10)
err <- rnorm(sd=5, 100)
y <- 25 + x1/20 + x2 + x3 + err
plot(y~x, pch=16, cex=.5)
x1 <- 1:100
x2 <- rep(c(1,3),times=50)
x3 <- rep(c(1,2,3,4,5,6,7,8,9,10), times=10)
err <- rnorm(sd=2, 100)
y <- 25 + x1/20 + x2 + x3 + err
plot(y~x, pch=16, cex=.5)
x1 <- 1:1000
x2 <- rep(c(1,3),times=500)
x3 <- rep(c(1,2,3,4,5,6,7,8,9,10), times=100)
err <- rnorm(sd=2, 1000)
y <- 25 + x1/20 + x2 + x3 + err
plot(y~x, pch=16, cex=.5)
x1 <- 1:1000
x2 <- rep(c(1,3),times=500)
x3 <- rep(c(1,2,3,4,5,6,7,8,9,10), times=100)
err <- rnorm(sd=2, 1000)
y <- 25 + x1/20 + x2 + x3 + err
plot(y~x, pch=16, cex=.5)
plot(y~x1, pch=16, cex=.5)
plot(y~x1, pch=16, cex=.5)
x1 <- 1:1000
x2 <- rep(c(1,3),times=500)
x3 <- rep(c(1,2,3,4,5,6,7,8,9,10), times=100)
err <- rnorm(sd=1, 1000)
y <- 25 + x1/20 + x2 + x3 + err
plot(y~x1, pch=16, cex=.5)
plot(y~x1, pch=16, cex=.5, col="gray")
x1 <- 1:1000
x2 <- rep(c(1,3),times=500)
x3 <- rep(c(1,2,3,4,5,6,7,8,9,10), times=100)
err <- rnorm(sd=1, 1000)
y <- 25 + x1/20 + x2 + x3 + err
lo <- loess(y~x1)
plot(y~x1, pch=16, cex=.5, col="gray")
lines(predict(lo), col='red', lwd=2)
help("loess")
lo <- loess(y~x1, span=.1)
plot(y~x1, pch=16, cex=.5, col="gray")
lines(predict(lo), col='red', lwd=2)
lo <- loess(y~x1, span=.01)
plot(y~x1, pch=16, cex=.5, col="gray")
lines(predict(lo), col='red', lwd=2)
lo <- loess(y~x1, span=.05)
plot(y~x1, pch=16, cex=.5, col="gray")
lines(predict(lo), col='red', lwd=2)
lo <- loess(y~x1, span=.02)
plot(y~x1, pch=16, cex=.5, col="gray")
lines(predict(lo), col='red', lwd=2)
lo <- loess(y~x1, span=.01)
plot(y~x1, pch=16, cex=.5, col="gray")
lines(predict(lo), col='red', lwd=2)
plot(y~x1, pch=16, cex=.5, col="gray")
lines(predict(lo), col='red', lwd=1)
plot(y~x1, pch=16, cex=.5, col="gray")
lines(predict(lo), col='red', lwd=.5)
lo <- loess(y~x1, span=.001)
plot(y~x1, pch=16, cex=.5, col="gray")
lines(predict(lo), col='red', lwd=.5)
lo <- loess(y~x1, span=.005)
plot(y~x1, pch=16, cex=.5, col="gray")
lines(predict(lo), col='red', lwd=.5)
x1 <- 1:100
x2 <- rep(c(1,3),times=50)
x3 <- rep(c(1,2,3,4,5,6,7,8,9,10), times=10)
err <- rnorm(sd=1, 100)
y <- 25 + x1/20 + x2 + x3 + err
lo <- loess(y~x1, span=.005)
lo <- loess(y~x1, span=.5)
plot(y~x1, pch=16, cex=.5, col="gray")
lines(predict(lo), col='red', lwd=.5)
lo <- loess(y~x1, span=.2)
plot(y~x1, pch=16, cex=.5, col="gray")
lines(predict(lo), col='red', lwd=.5)
x1 <- 1:100
x2 <- rep(c(1,3),times=50)
x3 <- rep(c(1,2,3,4,5,6,7,8,9,10), times=10)
err <- rnorm(sd=1, 100)
y <- 25 + x1/20 + x3 + err
lo <- loess(y~x1, span=.2)
plot(y~x1, pch=16, cex=.5, col="gray")
lines(predict(lo), col='red', lwd=.5)
lo <- loess(y~x1, span=.3)
plot(y~x1, pch=16, cex=.5, col="gray")
lines(predict(lo), col='red', lwd=.5)
lo <- loess(y~x1, span=.1)
plot(y~x1, pch=16, cex=.5, col="gray")
lines(predict(lo), col='red', lwd=.5)
lo <- loess(y~x1, span=.04)
lo <- loess(y~x1, span=.08)
plot(y~x1, pch=16, cex=.5, col="gray")
lines(predict(lo), col='red', lwd=.5)
lo <- loess(y~x1, span=.1)
plot(y~x1, pch=16, cex=.5, col="gray")
lines(predict(lo), col='red', lwd=.5)
lo <- loess(y~x1, span=.2)
plot(y~x1, pch=16, cex=.5, col="gray")
lines(predict(lo), col='red', lwd=.5)
lo <- loess(y~x, span=.2)
plot(y~x, pch=16, cex=.5, col="gray")
lines(predict(lo), col='red', lwd=.5)
x <- x1
lo <- loess(y~x, span=.2)
plot(y~x, pch=16, cex=.5, col="gray")
lines(predict(lo), col='red', lwd=.5)
plot(y~x, pch=16, cex=.5, col="gray")
abline(lm(y~x))
abline(lm(y~x),col="red")
plot(y~x, pch=16, cex=.5, col="gray")
abline(lm(y~x),col="red")
12/10
-12/10
3*(-1.2) +12 == -7*-1.2
9/5
0/-18
2/13
fit.lm <- lm(y~x)
fit.lm <- lm(y~x)
fit.lm <- lm(y~x)
fit.lm <- lm(y~x)
fit.glm <- glm(y~x)
summary(fit.lm)
summary(fit.glm)
(1226-966)/1226
cat.pred <- sample(c("a","b"),replace=T, size=100)
fit.lm <- lm(y ~ x + cat.pred)
summary(fit.lm)
anova(fit.lm)
cat.pred <- sample(c("a","b"),replace=T, size=100)
fit.lm <- lm(y ~ x + cat.pred)
summary(fit.lm)
anova(fit.lm)
y <- obs
fit.glm <- glm(y ~ pred1 + pred2)
fit.glm <- glm(y ~ pred1 * pred2)
summary(fit.glm)
fit.glm <- glm(y ~ pred1 | pred2)
fit.glm <- glm(y ~ pred2 | pred1)
fit.glm <- glm(y ~ rnorm(20) | pred1)
fit.glm <- glm(y ~ rnorm(20) | pred2)
summary(fit.glm)
pred1 <- rnorm(20)
fit.glm <- glm(y ~ pred1 | pred2)
summary(fit.glm)
fit.glm <- glm(y ~ pred1 | !pred2)
summary(fit.glm)
fit.glm <- glm(y ~ pred1 + pred1 | pred2)
summary(fit.glm)
x <- runif(min=0, max=100, 100)
y <- rnorm(mean=x, sd=20, n=100)
x2 <- x2==3
plot(y=y)
plot(y=y,x=x1)
plot(y=y,x=x)
fit.glm <- glm(y ~ x)
summary(fit.glm)
fit.glm <- glm(y ~ x | x2)
summary(fit.glm)
fit.glm <- glm(y ~ x*x2)
summary(fit.glm)
setwd("~/Desktop/Dropbox/gitrepos/coleoguy.github.io/teaching/expdes/hw-labs/data")
oak <- read.csv("oaks.csv", as.is=T)
View(oak)
View(oak)
View(oak)
colnames(oak) <- c("country", "circ", "temp", "precip", "specialist", "generalist")
oak <- read.csv("oaks.csv", as.is=T)
colnames(oak) <- c("country", "circ", "temp", "precip", "specialist", "generalist")
fit.lm <- lm(specialist ~ temp)
fit.lm <- lm(specialist ~ temp, data = oak)
summary(fit.lm)
fit.lm <- lm(specialist ~ temp*precip, data = oak)
summary(fit.lm)
anova(fit.lm)
fit.lm <- lm(specialist ~ temp*precip*circ, data = oak)
summary(fit.lm)
help(anova)
fit.lm <- lm(specialist ~ precip*temp*circ, data = oak)
summary(fit.lm)
anova(fit.lm, type)
anova(fit.lm)
fit.lm <- lm(specialist ~ + temp + precip + circ, data = oak)
summary(fit.lm)
fit.lm <- lm(specialist ~ + temp|precip + circ, data = oak)
summary(fit.lm)
fit.lm <- lm(specialist ~ circ + temp|precip, data = oak)
summary(fit.lm)
fit.lm <- lm(specialist ~ (precip + temp + circ)^3, data = oak)
summary(fit.lm)
fit.lm <- glm(specialist ~ temp * circ, data = oak)
summary(fit.lm)
fit.lm <- glm(specialist ~ circ * temp, data = oak)
summary(fit.lm)
fit.lm <- glm(specialist ~ temp * circ, data = oak, family = "poisson")
summary(fit.lm)
temp<- 15.8
circ<- 592
9.7621+(-.557*temp)+(-.066*circ)+(.0046*circ*temp)
library(phytools)
tree<-pbtree(n=100)
x<-fastBM(tree)
phylosig(tree,x,method="lambda",test=TRUE)
