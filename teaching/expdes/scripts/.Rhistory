feeding[probs<0] <- sample(c("spec", "gen"), size=sum(probs<0), prob=c(.8,.2), replace=T)
feeding[probs>0] <- sample(c("spec", "gen"), size=sum(probs>0), prob=c(.4,.7), replace=T)
boxplot(length~feeding)
activity <- sample(c("di","no"), 100, replace=T)
foo <- data.frame(length, feeding, activity)
View(foo)
setwd("~/Desktop/Dropbox/gitrepos/coleoguy.github.io/teaching/expdes/scripts")
write.csv(foo, "phylo.data.csv")
View(foo)
write.tree(tree, "tree.new")
# reading data
library(ape)
tree <- read.tree("tree.new")
names(tree)
tree$tip.label
tree$edge->foo
View(foo)
tree$edge.length
plot(tree)
plot(tree, show.tip.label = F)
nodelabes()
nodelabels()
help("nodelabels")
plot(tree, show.tip.label = F)
nodelabels(frame="none")
plot(tree, show.tip.label = F)
nodelabels(frame="none", cex=.3)
plot(tree, show.tip.label = F)
nodelabels(frame="none", cex=.5)
tree$edge
tree$edge.length[c(61,166)]
plot(tree, show.tip.label = F)
dat <- read.csv("phylo.data.csv")
View(dat)
tree$tip.label
dat$X
sum(tree$tip.label == dat$X)
helP(tiplabels())
helP(tiplabels
help("tiplabels")
View(dat)
dat$activity
as.factor(dat$activity)
as.numeric(as.factor(dat$activity))
col.ind <- as.numeric(as.factor(dat$activity))
as.numeric(c("hd","sf"))
tiplabels(pch=16, col=c("gold","darkblue")[col.ind])
plot(tree, show.tip.label = F)
tiplabels(pch=16,
col=c("gold","darkblue")[col.ind],
cex=.3)
library(phytools)
nodelabels(frame="none", cex=.5)
getDescendants(tree, 186)
tree$tip.label[getDescendants(tree, 186)]
help("getDescendants")
library(geiger)
help(ace)
# ACE
fit <- ace(dat$length,
tree,
model="bm")
fit$ace
fit$sigma2
plot(tree, show.tip.label = F)
hist(dat$length)
heat.colors(100)
hist(round(dat$length))
round(dat$length)
round(dat$length*10)
min(round(dat$length*10))
round(dat$length*10)+53
col.ind <- round(dat$length*10)+53
library(viridis)
plot(tree, show.tip.label = F)
tiplabels(pch=16,
col=viridis(100)[col.ind],
cex=.3)
tiplabels(pch=16,
col=viridis(100)[col.ind],
cex=.4)
par(mar=c(0,0,0,0))
plot(tree, show.tip.label = F)
tiplabels(pch=16,
col=viridis(100)[col.ind],
cex=.4)
tiplabels(pch=16,
col=viridis(100)[col.ind],
cex=.6)
fit$ace
round(fit$ace*10)+53
nodelabels(pch=16,
col=viridis(100)[col.ind],
cex=.6)
nodelabels(pch=16,
col=viridis(100)[col.ind],
cex=.8)
foo <- contMap(tree, dat$length)
tipvals <- dat$length
names(tipvals)<-dat$X
foo <- contMap(tree, tipvals)
help(contMap)
plot(foo, lwd=2, fsize=.5 )
pics.lengths <- pic(dat$length, tree)
pics.lengths <- pic(dat$length, tree)
pics.feeding <- pic(as.numeric(as.factor(dat$feeding)),
tree)
plot(pics.lengths~pics.feeding)
plot(pics.lengths~pics.feeding)
as.numeric(as.factor(dat$feeding))
hist(pics.lengths)
hist(dat$length)
View(dat)
play.data <- rnorm(100)
cor.test(pics.length~play.data)
cor.test(pics.length, play.data)
cor.test(pics.lengths, play.data)
play.data <- rnorm(99)
cor.test(pics.lengths, play.data)
cor.test(dat$length, play.data)
play.data <- rnorm(100)
cor.test(dat$length, play.data)
library(geiger)
phylANOVA(tree, dat$feeding, dat$length)->fit
names(fit)
summary(fit)
fit
View(dat)
mean(dat$length[dat$feeding=="spec"])
mean(dat$length[dat$feeding=="gen"])
phylANOVA(tree, dat$activity, dat$length)->fit
fit
View(dat)
library(nlme)
fit <- gls(dat$length~dat$feeding, correlation=
corBrownian(tree))
corBrownian(tree)
help(corBrownian)
fit <- gls(dat$length~dat$feeding, correlation=
corBrownian(phy=tree))
fit <- gls(length~feeding, correlation=
corBrownian(phy=tree),data=dat)
summary(fit)
trait <- 0
for(i in 1:100){
trait[i+1] <- trait + rnorm(1, mean=0, sd.1)
}
trait <- 0
for(i in 1:100){
trait[i+1] <- trait + rnorm(1, mean=0, sd=.1)
}
warnings()
trait <- 0
for(i in 1:100){
trait[(i+1)] <- trait + rnorm(1, mean=0, sd=.1)
}
trait <- 0
for(i in 1:100){
trait[(i+1)] <- trait[i] + rnorm(1, mean=0, sd=.1)
}
plot(trait)
plot(trait, type="l")
trait <- 0
trait2 <- 0
for(i in 1:100){
trait[(i+1)] <- trait[i] + rnorm(1, mean=0, sd=.1)
trait2[(i+1)] <- trait2[i] + rnorm(1, mean=0, sd=.3)
}
plot(trait2, type="l", col="red")
liens(trait, col="blue")
plot(trait2, type="l", col="red")
lines(trait, col="blue")
plot(trait2, type="l", col="red", ylims=c(-2,1))
lines(trait, col="blue")
plot(trait2, type="l", col="red", ylims=c(-2,1.3))
lines(trait, col="blue")
plot(trait2, type="l", col="red", ylim=c(-2,1))
lines(trait, col="blue")
trait <- 0
trait2 <- 0
for(i in 1:100){
trait[(i+1)] <- trait[i] + rnorm(1, mean=0, sd=.1)
trait2[(i+1)] <- trait2[i] + rnorm(1, mean=0, sd=.3)
}
plot(trait2, type="l", col="red", ylim=c(-2,1))
lines(trait, col="blue")
trait <- 0
trait2 <- 0
for(i in 1:100){
trait[(i+1)] <- trait[i] + rnorm(1, mean=0, sd=.1)
trait2[(i+1)] <- trait2[i] + rnorm(1, mean=0, sd=.3)
}
plot(trait2, type="l", col="red", ylim=c(-2,1))
lines(trait, col="blue")
plot(trait2, type="l", col="red", ylim=range(c(trait,trait2)))
lines(trait, col="blue")
trait <- 0
trait2 <- 0
for(i in 1:100){
trait[(i+1)] <- trait[i] + rnorm(1, mean=0, sd=.1)
trait2[(i+1)] <- trait2[i] + rnorm(1, mean=0, sd=.3)
}
plot(trait2, type="l", col="red", ylim=range(c(trait,trait2)))
lines(trait, col="blue")
trait <- 0
trait2 <- 0
for(i in 1:100){
trait[(i+1)] <- trait[i] + rnorm(1, mean=0, sd=.1)
trait2[(i+1)] <- trait2[i] + rnorm(1, mean=0, sd=.3)
}
plot(trait2, type="l", col="red", ylim=range(c(trait,trait2)))
lines(trait, col="blue")
trait <- 0
trait2 <- 0
for(i in 1:100){
trait[(i+1)] <- trait[i] + rnorm(1, mean=0, sd=.1)
trait2[(i+1)] <- trait2[i] + rnorm(1, mean=0, sd=.3)
}
plot(trait2, type="l", col="red", ylim=range(c(trait,trait2)))
lines(trait, col="blue")
trait <- 0
trait2 <- 0
for(i in 1:100){
trait[(i+1)] <- trait[i] + rnorm(1, mean=0, sd=.1)
trait2[(i+1)] <- trait2[i] + rnorm(1, mean=0, sd=.3)
}
plot(trait2, type="l", col="red", ylim=range(c(trait,trait2)))
lines(trait, col="blue")
trait <- 0
trait2 <- 0
for(i in 1:100){
trait[(i+1)] <- trait[i] + rnorm(1, mean=0, sd=.1)
trait2[(i+1)] <- trait2[i] + rnorm(1, mean=0, sd=.3)
}
plot(trait2, type="l", col="red", ylim=range(c(trait,trait2)))
lines(trait, col="blue")
trait <- 0
trait2 <- 0
for(i in 1:100){
trait[(i+1)] <- trait[i] + rnorm(1, mean=0, sd=.1)
trait2[(i+1)] <- trait2[i] + rnorm(1, mean=0, sd=.3)
}
plot(trait2, type="l", col="red", ylim=range(c(trait,trait2)))
lines(trait, col="blue")
trait <- 0
trait2 <- 0
for(i in 1:100){
trait[(i+1)] <- trait[i] + rnorm(1, mean=0, sd=.1)
trait2[(i+1)] <- trait2[i] + rnorm(1, mean=0, sd=.3)
}
plot(trait2, type="l", col="red", ylim=range(c(trait,trait2)))
lines(trait, col="blue")
trait <- 0
trait2 <- 0
for(i in 1:100){
trait[(i+1)] <- trait[i] + rnorm(1, mean=0, sd=.1)
trait2[(i+1)] <- trait2[i] + rnorm(1, mean=0, sd=.3)
}
plot(trait2, type="l", col="red", ylim=range(c(trait,trait2)))
lines(trait, col="blue")
trait <- 0
trait2 <- 0
for(i in 1:100){
trait[(i+1)] <- trait[i] + rnorm(1, mean=0, sd=.1)
trait2[(i+1)] <- trait2[i] + rnorm(1, mean=0, sd=.3)
}
plot(trait2, type="l", col="red", ylim=range(c(trait,trait2)))
lines(trait, col="blue")
tree <- rtree(3)
corBrownian(tree)
corBrownian(phy=tree)
corBrownian(phy=tree)->foo
foo
summary(foo)
load("/Users/hblackmon/Desktop/Dropbox/papers/published/additional files/2019 - chromTrait/data/results/carn10k.RData")
foo <- carn[[1]]
View(foo)
plot(foo$p)
plot(foo$p,type="l")
plot(carn[[2]]$p,type="l")
plot(carn[[3]]$p,type="l")
plot(carn[[4]]$p,type="l")
plot(carn[[5]]$p,type="l")
plot(carn[[6]]$p,type="l")
plot(carn[[7]]$p,type="l")
plot(carn[[7]]$asc1,type="l")
setwd("~/Desktop/Dropbox/gitrepos/coleoguy.github.io/teaching/expdes/scripts")
foo <- carn[[7]]
foo$acc <- sample(1:10, size=10000, replace=T)
plot(foo$acc)
plot(foo$acc,type="l")
foo$acc <- round(rnorm(10000,mean=3, sd=.5))
plot(foo$acc,type="l")
foo$acc <- round(rnorm(10000,mean=3, sd=1))
plot(foo$acc,type="l")
foo$acc[foo$acc<1]<-0
plot(foo$acc,type="l")
foo$acc <- round(rnorm(10000,mean=6, sd=2))
foo$acc[foo$acc<1]<-0
plot(foo$acc,type="l")
write.csv(foo, file="carn.csv")
load("/Users/hblackmon/Desktop/Dropbox/papers/published/additional files/2019 - chromTrait/data/results/subclades2.RData")
plot(chiro$p)
plot(chiro$p)
plot(chiro$p,type="l")
plot(chiro$asc1,type="l")
write.csv(chiro,file="chiro.csv")
.999*1/100000 + .005 * 99999/100000
.999 x 1/100000
.999 * 1/100000
(.999 * 1/100000)/ (.999*1/100000 + .005 * 99999/100000)
chiro <- read.csv("chiro.csv")
carn <- read.csv("carn.csv")
View(carn)
View(chiro)
plot(chiro$p, type="l")
plot(chiro$asc1, type="l")
hist(chiro$asc1)
plot(chiro$asc1~chiro$p)
plot(chiro$asc1~chiro$p, pch=16,
col=rgb(1,0,0,.5))
plot(chiro$asc1~chiro$p, pch=16,
col=rgb(1,0,0,.5), cex=.1)
plot(chiro$asc1~chiro$p, pch=16,
col=rgb(1,0,0,.5), cex=.2)
plot(chiro$asc2~chiro$p, pch=16,
col=rgb(1,0,0,.5), cex=.2)
par(mfcol=c(2,1))
plot(chiro$asc2~chiro$p, pch=16,
col=rgb(1,0,0,.5), cex=.2)
plot(chiro$asc2~chiro$p, pch=16,
col=rgb(1,0,0,.5), cex=.2)
plot(chiro$asc1~chiro$p, pch=16,
col=rgb(1,0,0,.5), cex=.2)
plot(chiro$asc2~chiro$p, pch=16,
col=rgb(1,0,0,.5), cex=.2)
plot(chiro$asc1,type="l")
plot(carn$p)
plot(carn$p, type="l")
plot(carn$p, type="l", lwd=.5)
plot(carn$p, type="l", lwd=.1)
plot(carn$asc1, type="l", lwd=.1)
plot(carn$asc1~carn$p, pch=16,
col=rgb(1,0,0,.5), cex=.2)
plot(carn$desc1~carn$p, pch=16,
col=rgb(1,0,0,.5), cex=.2)
plot(carn$asc2~carn$p, pch=16,
col=rgb(1,0,0,.5), cex=.2)
plot(carn$p, type="l", lwd=.1)
plot(chiro$asc1,type="l")
plot(carn$asc1, type="l", lwd=.1)
plot(carn$asc1~carn$p, pch=16,
col=rgb(1,0,0,.5), cex=.2)
hist(carn$p)
knitr::opts_chunk$set(echo = TRUE)
chiro <- read.csv("chiro.csv")
plot(chiro$p, type="l")
carn <- read.csv("carn.csv")
plot(carn$p, type="l")
coleo <- read.csv("coleoptera.csv")
plot(coleo$likelihood, type="l")
coleo <- read.csv("coleoptera.csv")
plot(coleo$likelihood, type="l")
plot(coleo$posterior, type="l")
View(coleo)
plot(coleo$posterior[1:200], type="l")
plot(coleo$posterior[100:10001], type="l")
plot(coleo$posterior[200:10001], type="l")
plot(coleo$posterior, type="l")
60000000/10000
plot(coleo$likelihood, type="l")
plot(coleo$likelihood[101:10001], type="l")
4000*6000
24000000
plot(coleo$likelihood[4001:10001], type="l")
60*.9
coleo <- read.csv("coleoptera2.csv")
plot(coleo$likelihood, type="l")
coleo <- read.csv("coleoptera2.csv")
coleo <- read.csv("coleoptera2.csv")
plot(coleo$likelihood, type="l")
plot(coleo$likelihood[50:3000], type="l")
coleo <- read.csv("coleoptera2.csv")
plot(coleo$likelihood[50:3000], type="l")
coleo <- read.csv("coleoptera2.csv")
plot(coleo$likelihood, type="l")
plot(coleo$likelihood[100:2997], type="l")
plot(coleo$posterior[100:2997], type="l")
coleo <- read.csv("coleoptera.csv")
plot(coleo$posterior[100:10000], type="l")
plot(coleo$posterior[900:10000], type="l")
plot(coleo$posterior[6000:10000], type="l")
chiro.good <- chiro[2501:10000]
chiro.good <- chiro[2501:10000,]
View(chiro.good)
chiro.good[1:10,]
types <- rep(c("fission1", "fission2","fusion1","fusion2"), each=7500)
new.dat <- data.frame(c(chiro.good$asc1,
chiro.good$asc2,
chiro.good$desc1,
chiro.good$desc2),
type)
types <- rep(c("fission1", "fission2","fusion1","fusion2"), each=7500)
new.dat <- data.frame(c(chiro.good$asc1,
chiro.good$asc2,
chiro.good$desc1,
chiro.good$desc2),
types)
library(ggplot2)
library(ggraptR)
ggraptR(new.dat)
types <- rep(c("fission","fusion"), each=15000)
states <- rep(c("1","2","1","2"), each=7500)
new.dat <- data.frame(c(chiro.good$asc1,
chiro.good$asc2,
chiro.good$desc1,
chiro.good$desc2),
types)
ggraptR(new.dat)
new.dat <- data.frame(c(chiro.good$asc1,
chiro.good$asc2,
chiro.good$desc1,
chiro.good$desc2),
types,
states)
ggraptR(new.dat)
ggplot(new.dat, aes(x=rate)) +
geom_density(aes(fill=as.factor(states), colour=states, y=..density..), stat="density", position="identity", alpha=0.5) +
facet_grid(. ~ types) +
theme_bw() +
guides(fill=guide_legend(title="states"), colour=guide_legend(title="states")) +
xlab("Rate of evolution") + ylab("density")
colnames(new.dat)[1] <- "rate"
ggplot(new.dat, aes(x=rate)) +
geom_density(aes(fill=as.factor(states), colour=states, y=..density..), stat="density", position="identity", alpha=0.5) +
facet_grid(. ~ types) +
theme_bw() +
guides(fill=guide_legend(title="states"), colour=guide_legend(title="states")) +
xlab("Rate of evolution") + ylab("density")
ggplot(new.dat, aes(x=rate)) +
geom_density(aes(fill=as.factor(states), colour=states, y=..density..), stat="density", position="identity", alpha=0.5) +
facet_grid(. ~ types) +
theme_bw() +
guides(fill=guide_legend(title="states")) +
xlab("Rate of evolution") + ylab("density")
ggplot(new.dat, aes(x=rate)) +
geom_density(aes(fill=as.factor(states), colour=states, y=..density..), stat="density",alpha=0.5) +
facet_grid(. ~ types) +
theme_bw() +
guides(fill=guide_legend(title="states")) +
xlab("Rate of evolution") + ylab("density")
help("facet_grid")
ggplot(new.dat, aes(x=rate)) +
geom_density(aes(fill=as.factor(states), colour=states, y=..density..), stat="density",alpha=0.5) +
facet_grid(. ~ types, scales="free_y") +
theme_bw() +
guides(fill=guide_legend(title="states")) +
xlab("Rate of evolution") + ylab("density")
ggplot(new.dat, aes(x=rate)) +
geom_density(aes(fill=as.factor(states), colour=states, y=..density..), stat="density",alpha=0.5) +
facet_grid(. ~ types, scales="free_Y") +
theme_bw() +
guides(fill=guide_legend(title="states")) +
xlab("Rate of evolution") + ylab("density")
ggplot(new.dat, aes(x=rate)) +
geom_density(aes(fill=as.factor(states), colour=states, y=..density..), stat="density",alpha=0.5) +
facet_grid(. ~ types, scales="free") +
theme_bw() +
guides(fill=guide_legend(title="states")) +
xlab("Rate of evolution") + ylab("density")
ggraptR(new.dat)
library(coda)
HPDinterval(as.mcmc(new.dat))
HPDinterval(as.mcmc(new.dat[,2:5]))
View(new.dat)
HPDinterval(as.mcmc(chiro.good[,2:5]))
# first lets get the data in long format
types <- rep(c("fission","fusion"), each=15000)
states <- rep(c("1","2","1","2"), each=7500)
new.dat <- data.frame(c(chiro.good$asc1,
chiro.good$asc2,
chiro.good$desc1,
chiro.good$desc2),
types,
states)
chiro <- read.csv("chiro.csv")
chiro.good <- chiro[2501:10000,]
chiro.good[1:10,]
# first lets get the data in long format
types <- rep(c("fission","fusion"), each=15000)
states <- rep(c("1","2","1","2"), each=7500)
new.dat <- data.frame(c(chiro.good$asc1,
chiro.good$asc2,
chiro.good$desc1,
chiro.good$desc2),
types,
states)
colnames(new.dat)[1] <- "rate"
ggplot(new.dat, aes(x=rate)) +
geom_density(aes(fill=as.factor(states), colour=states, y=..density..),     stat="density",alpha=0.5) +
facet_grid(. ~ types) +
theme_bw() +
guides(fill=guide_legend(title="states")) +
xlab("Rate of evolution") + ylab("density")
HPDinterval(as.mcmc(chiro.good[,2:5]))
library(ggplot2)
ggplot(new.dat, aes(x=rate)) +
geom_density(aes(fill=as.factor(states), colour=states, y=..density..),     stat="density",alpha=0.5) +
facet_grid(. ~ types) +
theme_bw() +
guides(fill=guide_legend(title="states")) +
xlab("Rate of evolution") + ylab("density")
