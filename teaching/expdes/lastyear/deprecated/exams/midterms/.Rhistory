scale_x_continuous(name = "Genome size", labels = fancy_scientific, breaks = breaks)+
labs(title = "Processing times using micRocounter, by genome size", y = "Time (s)")
ggplot(mc_time_gsz, aes(x= mc_time_gsz$species.gsz, y = mc_time_gsz$time.micRocounter))+
ggplot(mc_time_gsz, aes(x= mc_time_gsz$species.gsz, y = mc_time_gsz$time.micRocounter))+
theme(text = element_text(size = 12), axis.text.x = element_text(angle = 45, hjust = 1),
labs(title = "Processing times using micRocounter, by genome size", y = "Time (s)")
ggplot(mc_time_gsz, aes(x= mc_time_gsz$species.gsz, y = mc_time_gsz$time.micRocounter))+
geom_point(size = 3, shape = 20, color = "salmon")+
theme(text = element_text(size = 12), axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_continuous(name = "Genome size", labels = fancy_scientific, breaks = breaks)+
labs(title = "Processing times using micRocounter, by genome size", y = "Time (s)")
ggplot(mc_time_gsz, aes(x= mc_time_gsz$species.gsz, y = mc_time_gsz$time.micRocounter))+
geom_point(size = 3, shape = 20, color = "salmon")+
theme(text = element_text(size = 12), axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_continuous(name = "Genome size", labels = fancy_scientific, breaks = breaks)+
labs(title = "Processing times using micRocounter, by genome size", y = "Time (s)")
ggplot(mc_time_gsz, aes(x= mc_time_gsz$species.gsz, y = mc_time_gsz$time.micRocounter))+
geom_point(size = 3, shape = 20, color = "salmon")
ggplot(mc_time_gsz, aes(x= mc_time_gsz$species.gsz, y = mc_time_gsz$time.micRocounter))+
geom_point(size = 3, shape = 20, color = "salmon")+
theme(text = element_text(size = 12), axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(mc_time_gsz, aes(x= mc_time_gsz$species.gsz, y = mc_time_gsz$time.micRocounter))+
geom_point(size = 3, shape = 20, color = "salmon")+
theme(text = element_text(size = 12), axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_continuous(name = "Genome size", labels = fancy_scientific, breaks = breaks)
ggplot(mc_time_gsz, aes(x= mc_time_gsz$species.gsz, y = mc_time_gsz$time.micRocounter))+
geom_point(size = 3, shape = 20, color = "salmon")+
theme(text = element_text(size = 12), axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_continuous(name = "Genome size", labels = fancy_scientific, breaks = breaks)+
labs(title = "Processing times using micRocounter, by genome size", y = "Time (s)")
ggplot(mc_time_gsz, aes(x= mc_time_gsz$species.gsz, y = mc_time_gsz$time.micRocounter))+
geom_point(size = 3, shape = 20, color = "salmon")+
theme(text = element_text(size = 12), axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_continuous(name = "Genome size", labels = fancy_scientific, breaks = breaks)+
labs(title = "Processing times using micRocounter, by genome size", y = "Time (s)")
ggplot(mc_time_gsz, aes(x= mc_time_gsz$species.gsz, y = mc_time_gsz$time.micRocounter))+
geom_point(size = 4, shape = 20, color = "salmon")+
theme(text = element_text(size = 12), axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_continuous(name = "Genome size", labels = fancy_scientific, breaks = breaks)+
labs(title = "Processing times using micRocounter, by genome size", y = "Time (s)")
ggplot(mc_time_gsz, aes(x= mc_time_gsz$species.gsz, y = mc_time_gsz$time.micRocounter))+
geom_point(size = 4, shape = 20, color = "salmon")+
theme(text = element_text(size = 12), axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_continuous(name = "Genome size", labels = fancy_scientific, breaks = breaks)+
labs(title = "Processing times using micRocounter, by genome size", y = "Time (s)")
ggplot(mc_time_gsz, aes(x= mc_time_gsz$species.gsz, y = mc_time_gsz$time.micRocounter))+
geom_point(size = 4, shape = 20, color = "salmon")+
theme(text = element_text(size = 12), axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_continuous(name = "Genome size", labels = fancy_scientific, breaks = breaks)+
labs(title = "Processing times using micRocounter, by genome size", y = "Time (s)")
library(ggplot2)
source("fancy_scientific.r")
species <- c("Priacma serrata", "Liriomyza trifolii",
"Drosophila melanogaster", "Drosophila albomicans",
"Vanessa tameamea", "Megaselia abdita", "Megastigmus dorsalis",
"Rhodnius prolixus", "Calephelis virginiensis",
"Cryptotermes secundus", "Aedes aegypti",
"Calopteryx splendens", "Blatella germanica",
"Diabrotica virgifera", "Clitarchus hookeri")
time.PALfinder <- c(182.17, 711.52, 1732.54, 2482.95, 3516.01, 3846.94,
6182.64, 7659.64, 7866.56, 10258.16, 16481.57,
16588.64, 17334.91, 18860.57, 37867.80)
time.micRocounter <- c(.63, 3.46, 7.63, 12.32, 17.74, 20.49, 31.04,
31.83, 57.96, 49.37, 66.78, 75.49, 96.01, 102.74, 196.46)
species.gsz <- c(12078284, 69698627, 143725995, 253560284, 357124929,
412270594, 589959111, 706824083, 855081797, 1018932804,
1383974186, 1628352544, 2037297555, 2409977489, 3802633449)
benchmark <- cbind(species, species.gsz, time.micRocounter, time.PALfinder)
rownames(benchmark) <- species
colnames(benchmark) <- c("Species", "Genome size", "micRocounter - time (s)", "PALfinder - time (s)")
benchmark <- as.data.frame(benchmark)
species_gg <- rep(species, 2)
program <- c(rep("micRocounter", 15), rep("PALfinder", 15))
times <- c(time.micRocounter,time.PALfinder)
data_gg <- data.frame(species_gg, program, times)
data_gg <- data_gg[order(data_gg$species_gg),]
###grouped bar plot
ggplot(data_gg, aes(fill = data_gg$program, y = data_gg$times, x = species_gg)) +
geom_bar(position = "dodge", stat = "identity") +
theme(text = element_text(size = 10), axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Comparison of processing times for benchmark genomes", x = "Species", y = "Time (s)", fill = "Program used")+
scale_x_discrete(limits = species)+
scale_y_continuous(breaks = c(0,10,100,1000,10000), trans = "log1p")
###scatterplot for micRocounter, time vs gsz
mc_time_gsz <- data.frame(species.gsz, time.micRocounter)
breaks <- seq(1*10^7, 4*10^9, length.out = 8)
mc_time_gsz <- mc_time_gsz[order(mc_time_gsz$species.gsz),]
ggplot(mc_time_gsz, aes(x= mc_time_gsz$species.gsz, y = mc_time_gsz$time.micRocounter))+
geom_point(size = 3, shape = 20, color = "salmon")+
theme(text = element_text(size = 12), axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "lightsteelblue2", color = "slategray3", linetype = 7, size = 2),
panel.grid = element_line(color = "aliceblue", linetype = 6))+
scale_x_continuous(name = "Genome size", labels = fancy_scientific, breaks = breaks)+
labs(title = "Processing times using micRocounter, by genome size", y = "Time (s)")
###scatterplot for PALfinder, time vs gsz
pf_time_gsz <- data.frame(species.gsz, time.PALfinder)
breaks <- seq(1*10^7, 4*10^9, length.out = 8)
pf_time_gsz <- pf_time_gsz[order(mc_time_gsz$species.gsz),]
ggplot(pf_time_gsz, aes(x= pf_time_gsz$species.gsz, y = pf_time_gsz$time.PALfinder))+
geom_point(size = 3, shape = 17, color = "turquoise3")+
theme(text = element_text(size = 12), axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "lightsteelblue2", color = "slategray3", linetype = 7, size = 2),
panel.grid = element_line(color = "aliceblue", linetype = 6))+
scale_x_continuous(name = "Genome size", labels = fancy_scientific, breaks = breaks)+
labs(title = "Processing times using PALfinder, by genome size", y = "Time (s)")
###scatterplot for both
breaks <- seq(1*10^7, 4*10^9, length.out = 8)
raw_times <- c(time.micRocounter, time.PALfinder)
mcpf_time_gsz <- data.frame(species.gsz, program, raw_times)
ggplot(mcpf_time_gsz, aes(x= mcpf_time_gsz$species.gsz, y = mcpf_time_gsz$raw_times, group = mcpf_time_gsz$program, shape = mcpf_time_gsz$program, color = mcpf_time_gsz$program))+
geom_point(size = 1.5)+
##geom_point(size = 3,shape = c(rep(20, 15), rep(17, 15)), color = c(rep("salmon", 15), rep("turquoise3", 15)))+
theme(text = element_text(size = 12), axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "lightsteelblue2", color = "slategray3", linetype = 7, size = 2),
panel.grid = element_line(color = "aliceblue", linetype = 6))+
scale_x_continuous(name = "Genome size", labels = fancy_scientific, breaks = breaks)+
labs(title = "Processing times by genome size", y = "Time (s)", shape = "Program used")+
scale_color_discrete(name = "Program used")+
scale_shape_discrete(name = "Program used")
setwd("~/Desktop/Dropbox/projects/FST/scripts")
# first we load the functions that we have created
source("functions.R")
# number of generations to run simulation for
gens <- c(9000)
# population size for each simulation
pop.size <- c(100)
# the number of replicates for each simulation condition
iter <- 10
# number of generations to run simulation for
gens <- c(90)
# population size for each simulation
pop.size <- c(100)
# the number of replicates for each simulation condition
iter <- 10
i <- j<-k <- 1
# print statement so we know how it is doing
print(paste(i,"-",j,"-",k))
# writes the SLIM input file
write(MakeSlimInputPopFreq(gens = gens[j],
pop.size = pop.size[i],
mut.rate = .001,
iter = k),
file="temp.txt")
system(command="slim ./temp.txt")
system(command="slim ./temp.txt")
setwd("~/Desktop/midterms")
setwd("~/Desktop/midterms")
knitr::opts_chunk$set(echo = TRUE)
fins.real<-read.csv("fins.csv")
knitr::opts_chunk$set(echo = TRUE)
plot(x = dat$length,
y = dat$width,
col = cols,
pch = 16,
cex = .5,
xlab = "fin length",
ylab = "fin width",
cex.axis = .7)
# read the data
dat <- read.csv("fins.csv")
# lets set up a vector of colors to represent sex
cols <- viridis(100)[c(20, 80)][dat$sex]
plot(x = dat$length,
y = dat$width,
col = cols,
pch = 16,
cex = .5,
xlab = "fin length",
ylab = "fin width",
cex.axis = .7)
# lets set up a vector of colors to represent sex
cols <- viridis(100)[c(20, 80)][dat$sex]
plot(x = dat$length,
y = dat$width,
col = cols,
pch = 16,
cex = .5,
xlab = "fin length",
ylab = "fin width",
cex.axis = .7)
library(viridis)
# read the data
dat <- read.csv("fins.csv")
# lets set up a vector of colors to represent sex
cols <- viridis(100)[c(20, 80)][dat$sex]
plot(x = dat$length,
y = dat$width,
col = cols,
pch = 16,
cex = .5,
xlab = "fin length",
ylab = "fin width",
cex.axis = .7)
points(x=c(2.8,2.8),
y=c(1.2,1),
cols=viridis(100)[c(20, 80)],
pch=16)
plot(x = dat$length,
y = dat$width,
col = cols,
pch = 16,
cex = .5,
xlab = "fin length",
ylab = "fin width",
cex.axis = .7)
points(x=c(2.8,2.8),
y=c(1.2,1),
col=viridis(100)[c(20, 80)],
pch=16)
plot(x = dat$length,
y = dat$width,
col = cols,
pch = 16,
cex = .5,
xlab = "fin length",
ylab = "fin width",
cex.axis = .7)
points(x=c(2.8,2.8),
y=c(1.2,1),
col=viridis(100)[c(20, 80)],
pch=16)
text(x=c(2.8,2.8),
y=c(1.2,1),
c("female","male"),
pos=4)
plot(x = dat$length,
y = dat$width,
col = cols,
pch = 16,
cex = .5,
xlab = "fin length",
ylab = "fin width",
cex.axis = .7)
points(x=c(2.8,2.8),
y=c(1.2,1),
col=viridis(100)[c(20, 80)],
pch=16)
text(x=c(2.8,2.8),
y=c(1.2,1),
c("female","male"),
pos=4,
cex=.7)
library(readr)
scores <- read_csv("scores.csv")
View(scores)
hist(scores$X8)
hist(scores$X8,breaks=20)
View(scores)
hist(scores$X8[-14],breaks=20)
hist(scores$X8[-14],breaks=23, xlim=c(0,120))
scores$X8[-14]
hist(scores$X8[-14]*100,breaks=23, xlim=c(0,120))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores")
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count")
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n")
axis(side=2,at=c(1,2,3),labels=c(1,2,3))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n")
axis(side=2,at=c(0,1,2,3),labels=c(0,1,2,3))
help("hist")
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n")
axis(side=2,at=c(0,1,2,3),labels=c(0,1,2,3))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(1,2))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",3),rep("yellow",6),rep("green",15)))
axis(side=2,at=c(0,1,2,3),labels=c(0,1,2,3))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",3),rep("yellow",9),rep("green",12)))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",3),rep("yellow",9),rep("green",12)))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",3),rep("yellow",9),rep("green",12)))
axis(side=2,at=c(0,1,2,3),labels=c(0,1,2,3))
c(rep("red",5),rep("yellow",9),rep("green",12))
c(rep("red",3),rep("yellow",5),rep("green",12))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",3),rep("yellow",5),rep("green",16)))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",3),rep("yellow",5),rep("green",16)))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",3),rep("yellow",6),rep("green",15)))
c(rep("red",3),rep("yellow",6),rep("green",15))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",3),rep("yellow",5),rep("green",9)))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",3),rep("yellow",5),rep("green",9)))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",4),rep("yellow",5),rep("green",9)))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",4),rep("yellow",7),rep("green",9)))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",4),rep("yellow",2),rep("green",9)))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",4),rep("yellow",2),rep("green",2)))
80/5
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",16),rep("yellow",7),rep("green",2)))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",14),rep("yellow",7),rep("green",2)))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",12),rep("yellow",7),rep("green",2)))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",10),rep("yellow",7),rep("green",2)))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",9),rep("yellow",7),rep("green",2)))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",5),rep("yellow",7),rep("green",2)))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",5),rep("yellow",3),rep("green",2)))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",5),rep("yellow",4),rep("green",2)))
hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",5),rep("yellow",5),rep("green",2)))
x <- hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",5),rep("yellow",5),rep("green",2)))
x$breaks
x <- hist(scores$X8[-14]*100,
breaks=23,
xlim=c(0,120),
main="midterm scores",
xlab="points earned",
ylab="count",
yaxt="n",
col=c(rep("red",6),rep("yellow",9),rep("green",10)))
axis(side=2,at=c(0,1,2,3),labels=c(0,1,2,3))
x <- rnorm(100)
y <- rnrom(mean=x)
y <- rnorm(mean=x)
y <- rnorm(mean=x, n=100)
plot(y~x)
cor.test(y~x)
cor.test(x=x,y=y)
aov(lm(y~x))
summary(aov(lm(y~x)))
summary(lm(y~x))
y <- 2 + rnorm(mean=x, n=100)
cor.test(x=x,y=y)
summary(aov(lm(y~x)))
summary(lm(y~x))
summary(glm(y~x))
help("glm")
source('~/.active-rstudio-document', echo=TRUE)
