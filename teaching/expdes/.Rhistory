com.sex.pop <- com.sex.pop - 1
}
}
View(results)
com.sex.pop <- 4
for(i in seq(from=1, to=7, by=2)){
results[i:(i+1), 1] <- sum(res.base[[com.sex.pop]]$rd0.5$h0.5$s0.9[, 3]==1)/500
com.sex.pop <- com.sex.pop - 1
}
for(i in 2:7){
com.sex.pop <- 4
for(j in seq(from=1, to =7, by =2)){
results[j, i] <- sum(res.rare.mal[[com.sex.pop]][[i-1]]$rd0.5$h0.5$s0.9[, 3]==1)/1000
results[(j+1), i] <- sum(res.rare.fem[[com.sex.pop]][[i-1]]$rd0.5$h0.5$s0.9[, 3]==0)/1000
com.sex.pop <- com.sex.pop - 1
}
}
View(results)
# check this out this is using a different
# plotting package I think it is kind of
# beautiful!
library(reshape2)
melted_result <- melt(t(results[8:1,]))
library(ggplot2)
p <- ggplot(data = melted_result,
aes(x=Var1, y=Var2, fill=value)) +
xlab("Operational sex ratio (rare:common)") +
ylab("Number of common sex") +
geom_tile(color="white") +
scale_fill_viridis(
name = "Frequency male \nbenefit allele",
limit = c(0,1),
guide = "colourbar") +
theme(legend.text = element_text(size=7),
legend.title = element_text(size=7),
axis.title.x = element_text(size=8),
axis.title.y = element_text(size=8),
axis.text.x = element_text(size=7),
axis.text.y = element_text(size=7))
p <- ggplot(data = melted_result,
aes(x=Var1, y=Var2, fill=value)) +
xlab("Operational sex ratio (rare:common)") +
ylab("Number of common sex") +
geom_tile(color="white") +
scale_fill_viridis(
name = "Frequency common sex\nbenefit allele fixes",
limit = c(0,1),
guide = "colourbar") +
theme(legend.text = element_text(size=7),
legend.title = element_text(size=7),
axis.title.x = element_text(size=8),
axis.title.y = element_text(size=8),
axis.text.x = element_text(size=7),
axis.text.y = element_text(size=7))
ggsave(filename = "Autosomal=fixed_h_0.5_s_0.9.jpg",
plot=p, width=5, height=4, units="in")
com.sex.pop <- 4
for(i in seq(from=1, to=7, by=2)){
results[i:(i+1), 1] <- sum(res.base[[com.sex.pop]]$rd0.5$h0$s0.9[, 3]==1)/500
com.sex.pop <- com.sex.pop - 1
}
for(i in 2:7){
com.sex.pop <- 4
for(j in seq(from=1, to =7, by =2)){
results[j, i] <- sum(res.rare.mal[[com.sex.pop]][[i-1]]$rd0.5$h0$s0.9[, 3]==1)/1000
results[(j+1), i] <- sum(res.rare.fem[[com.sex.pop]][[i-1]]$rd0.5$h0$s0.9[, 3]==0)/1000
com.sex.pop <- com.sex.pop - 1
}
}
# check this out this is using a different
# plotting package I think it is kind of
# beautiful!
library(reshape2)
melted_result <- melt(t(results[8:1,]))
library(ggplot2)
p <- ggplot(data = melted_result,
aes(x=Var1, y=Var2, fill=value)) +
xlab("Operational sex ratio (rare:common)") +
ylab("Number of common sex") +
geom_tile(color="white") +
scale_fill_viridis(
name = "Frequency male \nbenefit allele",
limit = c(0,1),
guide = "colourbar") +
theme(legend.text = element_text(size=7),
legend.title = element_text(size=7),
axis.title.x = element_text(size=8),
axis.title.y = element_text(size=8),
axis.text.x = element_text(size=7),
axis.text.y = element_text(size=7))
ggsave(filename = "Autosomal=fixed_h_0_s_0.9.jpg",
plot=p, width=5, height=4, units="in")
com.sex.pop <- 4
for(i in seq(from=1, to=7, by=2)){
results[i:(i+1), 1] <- sum(res.base[[com.sex.pop]]$rd0.5$h1$s0.9[, 3]==1)/500
com.sex.pop <- com.sex.pop - 1
}
for(i in 2:7){
com.sex.pop <- 4
for(j in seq(from=1, to =7, by =2)){
results[j, i] <- sum(res.rare.mal[[com.sex.pop]][[i-1]]$rd0.5$h1$s0.9[, 3]==1)/1000
results[(j+1), i] <- sum(res.rare.fem[[com.sex.pop]][[i-1]]$rd0.5$h1$s0.9[, 3]==0)/1000
com.sex.pop <- com.sex.pop - 1
}
}
# check this out this is using a different
# plotting package I think it is kind of
# beautiful!
library(reshape2)
melted_result <- melt(t(results[8:1,]))
library(ggplot2)
p <- ggplot(data = melted_result,
aes(x=Var1, y=Var2, fill=value)) +
xlab("Operational sex ratio (rare:common)") +
ylab("Number of common sex") +
geom_tile(color="white") +
scale_fill_viridis(
name = "Frequency male \nbenefit allele",
limit = c(0,1),
guide = "colourbar") +
theme(legend.text = element_text(size=7),
legend.title = element_text(size=7),
axis.title.x = element_text(size=8),
axis.title.y = element_text(size=8),
axis.text.x = element_text(size=7),
axis.text.y = element_text(size=7))
ggsave(filename = "Autosomal=fixed_h_1_s_0.9.jpg",
plot=p, width=5, height=4, units="in")
com.sex.pop <- 4
for(i in seq(from=1, to=7, by=2)){
results[i:(i+1), 1] <- sum(res.base[[com.sex.pop]]$rd0.5$h99$s0.9[, 3]==1)/500
com.sex.pop <- com.sex.pop - 1
}
for(i in 2:7){
com.sex.pop <- 4
for(j in seq(from=1, to =7, by =2)){
results[j, i] <- sum(res.rare.mal[[com.sex.pop]][[i-1]]$rd0.5$h99$s0.9[, 3]==1)/1000
results[(j+1), i] <- sum(res.rare.fem[[com.sex.pop]][[i-1]]$rd0.5$h99$s0.9[, 3]==0)/1000
com.sex.pop <- com.sex.pop - 1
}
}
# check this out this is using a different
# plotting package I think it is kind of
# beautiful!
library(reshape2)
melted_result <- melt(t(results[8:1,]))
library(ggplot2)
# first we will load all the data and give each a name
# first lets load the rare female data
load("../results/rare.female.model2.RData")
res.rare.fem <- results
# first lets load the rare male data
load("../results/rare.male.model2.RData")
res.rare.mal <- results
# first lets load the equal sex data
load("../results/base.comp.model3.RData")
res.base <- results
# lets remove the extra copy of the results
rm(results)
### FIRST LETS DO H=.5
# now lets build that empty matrix that we will end
# up plotting it will have 8 rows and 7 cols
results <- matrix(,8,7)
# lets give names to our rows and cols so we dont
# forget what we have stored
row.names(results) <- c("1000.f", "1000.m", "500.f", "500.m",
"100.f", "100.m", "50.f", "50.m")
colnames(results) <- c("OSR1","OSR.8","OSR.6",
"OSR.4","OSR.2","OSR.1",
"OSR.05")
# lets look at the case of h=0, s=.1, rd=.5
com.sex.pop <- 4
for(i in seq(from=1, to=7, by=2)){
results[i:(i+1), 1] <- sum(res.base[[com.sex.pop]]$rd0.5$h0.5$s0.9[, 3]==1)/500
com.sex.pop <- com.sex.pop - 1
}
for(i in 2:7){
com.sex.pop <- 4
for(j in seq(from=1, to =7, by =2)){
results[j, i] <- sum(res.rare.mal[[com.sex.pop]][[i-1]]$rd0.5$h0.5$s0.9[, 3]==1)/1000
results[(j+1), i] <- sum(res.rare.fem[[com.sex.pop]][[i-1]]$rd0.5$h0.5$s0.9[, 3]==0)/1000
com.sex.pop <- com.sex.pop - 1
}
}
# check this out this is using a different
# plotting package I think it is kind of
# beautiful!
library(reshape2)
melted_result <- melt(t(results[8:1,]))
library(ggplot2)
p <- ggplot(data = melted_result,
aes(x=Var1, y=Var2, fill=value)) +
xlab("Operational sex ratio (rare:common)") +
ylab("Number of common sex") +
geom_tile(color="white") +
scale_fill_viridis(
name = "Frequency common sex\nbenefit allele fixes",
limit = c(0,1),
guide = "colourbar") +
theme(legend.text = element_text(size=7),
legend.title = element_text(size=7),
axis.title.x = element_text(size=8),
axis.title.y = element_text(size=8),
axis.text.x = element_text(size=7),
axis.text.y = element_text(size=7))
ggsave(filename = "Autosomal=fixed_h_0.5_s_0.9.jpg",
plot=p, width=5, height=4, units="in")
### NOW LETS DO H=0
# now lets build that empty matrix that we will end
# up plotting it will have 8 rows and 7 cols
results <- matrix(,8,7)
# lets give names to our rows and cols so we dont
# forget what we have stored
row.names(results) <- c("1000.f", "1000.m", "500.f", "500.m",
"100.f", "100.m", "50.f", "50.m")
colnames(results) <- c("OSR1","OSR.8","OSR.6",
"OSR.4","OSR.2","OSR.1",
"OSR.05")
com.sex.pop <- 4
for(i in seq(from=1, to=7, by=2)){
results[i:(i+1), 1] <- sum(res.base[[com.sex.pop]]$rd0.5$h0$s0.9[, 3]==1)/500
com.sex.pop <- com.sex.pop - 1
}
for(i in 2:7){
com.sex.pop <- 4
for(j in seq(from=1, to =7, by =2)){
results[j, i] <- sum(res.rare.mal[[com.sex.pop]][[i-1]]$rd0.5$h0$s0.9[, 3]==1)/1000
results[(j+1), i] <- sum(res.rare.fem[[com.sex.pop]][[i-1]]$rd0.5$h0$s0.9[, 3]==0)/1000
com.sex.pop <- com.sex.pop - 1
}
}
# check this out this is using a different
# plotting package I think it is kind of
# beautiful!
library(reshape2)
melted_result <- melt(t(results[8:1,]))
library(ggplot2)
p <- ggplot(data = melted_result,
aes(x=Var1, y=Var2, fill=value)) +
xlab("Operational sex ratio (rare:common)") +
ylab("Number of common sex") +
geom_tile(color="white") +
scale_fill_viridis(
name = "Frequency common sex\nbenefit allele fixes",
limit = c(0,1),
guide = "colourbar") +
theme(legend.text = element_text(size=7),
legend.title = element_text(size=7),
axis.title.x = element_text(size=8),
axis.title.y = element_text(size=8),
axis.text.x = element_text(size=7),
axis.text.y = element_text(size=7))
ggsave(filename = "Autosomal=fixed_h_0_s_0.9.jpg",
plot=p, width=5, height=4, units="in")
### NOW LETS DO H=1
# now lets build that empty matrix that we will end
# up plotting it will have 8 rows and 7 cols
results <- matrix(,8,7)
# lets give names to our rows and cols so we dont
# forget what we have stored
row.names(results) <- c("1000.f", "1000.m", "500.f", "500.m",
"100.f", "100.m", "50.f", "50.m")
colnames(results) <- c("OSR1","OSR.8","OSR.6",
"OSR.4","OSR.2","OSR.1",
"OSR.05")
# lets look at the case of h=0, s=.1, rd=.5
com.sex.pop <- 4
for(i in seq(from=1, to=7, by=2)){
results[i:(i+1), 1] <- sum(res.base[[com.sex.pop]]$rd0.5$h1$s0.9[, 3]==1)/500
com.sex.pop <- com.sex.pop - 1
}
for(i in 2:7){
com.sex.pop <- 4
for(j in seq(from=1, to =7, by =2)){
results[j, i] <- sum(res.rare.mal[[com.sex.pop]][[i-1]]$rd0.5$h1$s0.9[, 3]==1)/1000
results[(j+1), i] <- sum(res.rare.fem[[com.sex.pop]][[i-1]]$rd0.5$h1$s0.9[, 3]==0)/1000
com.sex.pop <- com.sex.pop - 1
}
}
# check this out this is using a different
# plotting package I think it is kind of
# beautiful!
library(reshape2)
melted_result <- melt(t(results[8:1,]))
library(ggplot2)
p <- ggplot(data = melted_result,
aes(x=Var1, y=Var2, fill=value)) +
xlab("Operational sex ratio (rare:common)") +
ylab("Number of common sex") +
geom_tile(color="white") +
scale_fill_viridis(
name = "Frequency common sex\nbenefit allele fixes",
limit = c(0,1),
guide = "colourbar") +
theme(legend.text = element_text(size=7),
legend.title = element_text(size=7),
axis.title.x = element_text(size=8),
axis.title.y = element_text(size=8),
axis.text.x = element_text(size=7),
axis.text.y = element_text(size=7))
ggsave(filename = "Autosomal=fixed_h_1_s_0.9.jpg",
plot=p, width=5, height=4, units="in")
### NOW LETS DO H=99
# now lets build that empty matrix that we will end
# up plotting it will have 8 rows and 7 cols
results <- matrix(,8,7)
# lets give names to our rows and cols so we dont
# forget what we have stored
row.names(results) <- c("1000.f", "1000.m", "500.f", "500.m",
"100.f", "100.m", "50.f", "50.m")
colnames(results) <- c("OSR1","OSR.8","OSR.6",
"OSR.4","OSR.2","OSR.1",
"OSR.05")
# lets look at the case of h=0, s=.1, rd=.5
com.sex.pop <- 4
for(i in seq(from=1, to=7, by=2)){
results[i:(i+1), 1] <- sum(res.base[[com.sex.pop]]$rd0.5$h99$s0.9[, 3]==1)/500
com.sex.pop <- com.sex.pop - 1
}
for(i in 2:7){
com.sex.pop <- 4
for(j in seq(from=1, to =7, by =2)){
results[j, i] <- sum(res.rare.mal[[com.sex.pop]][[i-1]]$rd0.5$h99$s0.9[, 3]==1)/1000
results[(j+1), i] <- sum(res.rare.fem[[com.sex.pop]][[i-1]]$rd0.5$h99$s0.9[, 3]==0)/1000
com.sex.pop <- com.sex.pop - 1
}
}
# check this out this is using a different
# plotting package I think it is kind of
# beautiful!
library(reshape2)
melted_result <- melt(t(results[8:1,]))
library(ggplot2)
p <- ggplot(data = melted_result,
aes(x=Var1, y=Var2, fill=value)) +
xlab("Operational sex ratio (rare:common)") +
ylab("Number of common sex") +
geom_tile(color="white") +
scale_fill_viridis(
name = "Frequency common sex\nbenefit allele fixes",
limit = c(0,1),
guide = "colourbar") +
theme(legend.text = element_text(size=7),
legend.title = element_text(size=7),
axis.title.x = element_text(size=8),
axis.title.y = element_text(size=8),
axis.text.x = element_text(size=7),
axis.text.y = element_text(size=7))
ggsave(filename = "Autosomal=fixed_h_99_s_0.9.jpg",
plot=p, width=5, height=4, units="in")
round(rnorm(100, mean=21, sd=5), digits=2)
fish.us <- round(rnorm(100, mean=21, sd=5), digits=2)
fish.can <- round(rnorm(100, mean=21, sd=5), digits=2)
par(mfcol=c(2,1))
hist(fish.us)
hist(fish.us)
hist(fish.can)
hist(fish.can)
hist(fish.us)
t.test(fish.us,fish.can)
library(car)
levene.test(fish.can,fish.us)
leveneTest(fish.can,fish.us)
data.frame(c(fish.can,fish.us),
c(rep("can",100),rep("us",100)))
x<-data.frame(c(fish.can,fish.us),
c(rep("can",100),rep("us",100)))
leveneTest(x)
View(x)
fish.us <- round(rnorm(100, mean=21, sd=3.2), digits=2)
fish.can <- round(rnorm(100, mean=20, sd=5), digits=2)
hist(fish.can)
hist(fish.can)
hist(fish.us)
t.test(fish.us,fish.can)
fish.us <- round(rnorm(100, mean=21, sd=3.2), digits=2)
fish.can <- round(rnorm(100, mean=20, sd=5), digits=2)
hist(fish.can)
hist(fish.us)
t.test(fish.us,fish.can)
fish.us <- round(rnorm(100, mean=21, sd=3.2), digits=2)
fish.can <- round(rnorm(100, mean=20, sd=5), digits=2)
hist(fish.can)
hist(fish.us)
t.test(fish.us,fish.can)
fish.us <- round(rnorm(100, mean=21, sd=3.2), digits=2)
fish.can <- round(rnorm(100, mean=20, sd=5), digits=2)
hist(fish.can)
hist(fish.us)
t.test(fish.us,fish.can)
x<- matrix(c(fish.us,fish.can),100,2)
colnames(x)<- c("US","CAN")
setwd("~/Desktop/Dropbox/gitrepos/coleoguy.github.io/teaching/expdes")
write.csv(x,file="fish.csv",row.names = F)
t1males <- rnorm(n=100, mean=2.54, sd =.2)
t1females <- rnorm(n=100, mean=2.34, sd =.2)
t2males <- rnorm(n=100, mean=t1males, sd =.2)
t2females <- rnorm(n=100, mean=t1females, sd =.2)
plot(t1males~t2males)
points(t1females~t2females)
t1males <- rnorm(n=100, mean=2.54, sd =.2)
t1females <- rnorm(n=100, mean=2.04, sd =.1)
t2males <- rnorm(n=100, mean=t1males, sd =.2)
t2females <- rnorm(n=100, mean=t1females, sd =.5)
plot(t1males~t2males, pch=16, cex=.6, col="blue", ylim=c(1,4))
points(t1females~t2females, pch=16, cex=.6, col="red")
plot(t1males~t2males, pch=16, cex=.6, col="blue", ylim=c(1,4))
points(t1females~t2females, pch=16, cex=.6, col="red")
plot(t1males~t2males, pch=16, cex=.6, col="blue", ylim=c(1.5,3.4))
points(t1females~t2females, pch=16, cex=.6, col="red")
plot(t1males~t2males, pch=16, cex=.6, col="blue", xlim=c(1,4),ylim=c(1.5,3.4))
points(t1females~t2females, pch=16, cex=.6, col="red")
plot(t1males~t2males, pch=16, cex=.6, col="blue", xlim=c(.5,4),ylim=c(1.5,3.4))
points(t1females~t2females, pch=16, cex=.6, col="red")
plot(t1males~t2males, pch=16, cex=.6, col="blue", xlim=c(0,4),ylim=c(1.5,3.4))
points(t1females~t2females, pch=16, cex=.6, col="red")
x <- c(t1males,t2males,t1females,t2females)
y <- c(rep("male",100),rep("female",100))
z <- matrix(c(x,y), 100, 5)
View(z)
t2males, t2females), digits=3
x <- round(c(t1males, t1females,
t2males, t2females), digits=3)
y <- c(rep("male",100),rep("female",100))
z <- matrix(c(x,y), 100, 5)
View(z)
z <- matrix(c(x,y), 200, 5)
View(z)
z[,5] <- z[,3]
View(z)
help(rpois)
z[,3] <- rpois(n=200, lambda=8)
View(z)
z[,4] <- sample(1:10, replace=T, size=200)
View(z)
View(z)
colnames(z) <- c("fin_length","fin_width",
"scale_count","pond_id",
"sex")
View(z)
z[,3] <- sample(1001:3000, size=200)
z[,4] <- sample(1:10, replace=T, size=200)
colnames(z) <- c("fin_length","fin_width",
"capture_id","pond_id",
"sex")
View(z)
write.csv(z,file="fins.csv",row.names=F)
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv("retrogenes.csv")
View(dat)
sample(dat$chromosome,
size=sum(dat$number.of.offspring.genes),
prob = dat$size)
sample(dat$chromosome,
size=sum(dat$number.of.offspring.genes),
prob = dat$size,
replace=T)
sample(dat$chromosome,
size=sum(dat$number.of.offspring.genes),
prob = dat$size,
replace=T) == 1
sum(sample(dat$chromosome,
size=sum(dat$number.of.offspring.genes),
prob = dat$size,
replace=T) == 1)
result <- c()
for(i in 1:1000){
result[i] <- sum(sample(dat$chromosome,
size=sum(dat$number.of.offspring.genes),
prob = dat$size,
replace=T) == 1)
}
obs <- 18
emp.pval <- result>=obs/1000
emp.pval <- sum(result>=obs)/1000
dat <- read.csv("fish.csv")
View(dat)
t.test(dat$US,dat$CAN)
dat <- read.csv("fins.csv")
dat <- read.csv("fins.csv")
plot(dat$fin_length[dat$sex=="male"]~dat$fin_width[dat$sex=="male"],pch=16, col=rgb(1,0,0,.5),cex=.3,xlab="fin width",ylab="fin length",xlim=c(0,6),ylim=c(0,6))
dat <- read.csv("fins.csv")
plot(dat$fin_length[dat$sex=="male"]~dat$fin_width[dat$sex=="male"],pch=16, col=rgb(1,0,0,.5),cex=.3,xlab="fin width",ylab="fin length",xlim=c(0,6),ylim=c(0,6))
points(dat$fin_length[dat$sex=="female"]~dat$fin_width[dat$sex=="female"],pch=16, col=rgb(0,1,0,.5),cex=.3)
dat <- read.csv("fins.csv")
plot(dat$fin_length[dat$sex=="male"]~dat$fin_width[dat$sex=="male"],pch=16, col=rgb(1,0,0,.5),cex=.3,xlab="fin width",ylab="fin length",xlim=c(0,3.5),ylim=c(0,3.5))
points(dat$fin_length[dat$sex=="female"]~dat$fin_width[dat$sex=="female"],pch=16, col=rgb(0,1,0,.5),cex=.3)
dat <- read.csv("fins.csv")
plot(dat$fin_length[dat$sex=="male"]~dat$fin_width[dat$sex=="male"],pch=16, col=rgb(0,0,1,.5),cex=.3,xlab="fin width",ylab="fin length",xlim=c(0,3.5),ylim=c(1.5,3.5))
points(dat$fin_length[dat$sex=="female"]~dat$fin_width[dat$sex=="female"],pch=16, col=rgb(1,0,0,.5),cex=.3)
dat <- read.csv("fins.csv")
plot(dat$fin_length[dat$sex=="male"]~dat$fin_width[dat$sex=="male"],pch=16, col=rgb(0,0,1,.5),cex=.5,xlab="fin width",ylab="fin length",xlim=c(0,3.5),ylim=c(1.5,3.5))
points(dat$fin_length[dat$sex=="female"]~dat$fin_width[dat$sex=="female"],pch=16, col=rgb(1,0,0,.5),cex=.5)
points(x=c(0,0),y=c(3.4,3.1),pch=16,col=c(rgb(0,0,1,.5),rgb(1,0,0,.5))
dat <- read.csv("fins.csv")
dat <- read.csv("fins.csv")
plot(dat$fin_length[dat$sex=="male"]~dat$fin_width[dat$sex=="male"],pch=16, col=rgb(0,0,1,.5),cex=.5,xlab="fin width",ylab="fin length",xlim=c(0,3.5),ylim=c(1.5,3.5))
points(dat$fin_length[dat$sex=="female"]~dat$fin_width[dat$sex=="female"],pch=16, col=rgb(1,0,0,.5),cex=.5)
points(x=c(0,0),y=c(3.4,3.1),pch=16,col=c(rgb(0,0,1,.5),rgb(1,0,0,.5)))
dat <- read.csv("fins.csv")
plot(dat$fin_length[dat$sex=="male"]~dat$fin_width[dat$sex=="male"],pch=16, col=rgb(0,0,1,.5),cex=.5,xlab="fin width",ylab="fin length",xlim=c(0,3.5),ylim=c(1.5,3.5))
points(dat$fin_length[dat$sex=="female"]~dat$fin_width[dat$sex=="female"],pch=16, col=rgb(1,0,0,.5),cex=.5)
points(x=c(0,0),y=c(3.4,3.1),pch=16,col=c(rgb(0,0,1,.5),rgb(1,0,0,.5)))
text(x=c(0,0),y=c(3.4,3.1),c("male","female"),pos=4)
pb <- .99*.5 + .5*.5
pba <- .99
pa <- .5
pp <- (pb*pba)/pa
pb <- .99*.5 + .5*.5
pba <- .99
pa <- .5
pp <- (pa*pba)/pb
