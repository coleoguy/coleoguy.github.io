r2s[i] <- summary(lm(cur$contig.gene.count ~ pred))$r.squared
}
plto(cvs~r2s)
plot(cvs~r2s)
names(csv) <- names(r2s) <- sp
dat <-read.csv("final_results.csv")
dat <-read.csv("all_contigs_results.csv")
sp <- unique(dat$species)
cvs <- c()
r2s <- c()
for(i in 1:length(sp)){
cur <- dat[dat$species==sp[i],]
gd <- cur$contig.gene.count/(cur$contig.size_bp/1000000)
cvs[i] <- sd(gd)/mean(gd)
pred <- (cur$contig.size_bp/1000000)
r2s[i] <- summary(lm(cur$contig.gene.count ~ pred))$r.squared
}
names(csv) <- names(r2s) <- sp
dat <-read.csv("all_contigs_results.csv")
sp <- unique(dat$species)
cvs <- c()
r2s <- c()
for(i in 1:length(sp)){
cur <- dat[dat$species==sp[i],]
gd <- cur$contig.gene.count/(cur$contig.size_bp/1000000)
cvs[i] <- sd(gd)/mean(gd)
pred <- (cur$contig.size_bp/1000000)
r2s[i] <- summary(lm(cur$contig.gene.count ~ pred))$r.squared
}
names(csv) <- names(r2s) <- sp
names(cvs) <- names(r2s) <- sp
dat2 <-read.csv("final_results.csv")
View(dat2)
sum(is.na(dat2$chromnum.1n))
sum(is.na(dat2$pval.beta))
dat2$clade
fishes <- dat2$species[dat2$clade == "Actinopterygii"]
cvs <- cvs[names(cvs %in% fishes)]
dat <-read.csv("all_contigs_results.csv")
sp <- unique(dat$species)
cvs <- c()
r2s <- c()
for(i in 1:length(sp)){
cur <- dat[dat$species==sp[i],]
gd <- cur$contig.gene.count/(cur$contig.size_bp/1000000)
cvs[i] <- sd(gd)/mean(gd)
pred <- (cur$contig.size_bp/1000000)
r2s[i] <- summary(lm(cur$contig.gene.count ~ pred))$r.squared
}
names(cvs) <- names(r2s) <- sp
dat2 <-read.csv("final_results.csv")
fishes <- dat2$species[dat2$clade == "Actinopterygii"]
names(cvs)
fishes <- dat2$species[dat2$clade == "Actinopterygii"]
fishes
cvs <- cvs[names(cvs) %in% fishes]
r2s<-  r2s[names(cvs) %in% fishes]
plot(cvs~r2s)
r2s<-  r2s[names(r2s) %in% fishes]
plot(cvs~r2s)
dat <-read.csv("all_contigs_results.csv")
sp <- unique(dat$species)
cvs <- c()
r2s <- c()
for(i in 1:length(sp)){
cur <- dat[dat$species==sp[i],]
gd <- cur$contig.gene.count/(cur$contig.size_bp)
cvs[i] <- sd(gd)/mean(gd)
pred <- (cur$contig.size_bp)
r2s[i] <- summary(lm(cur$contig.gene.count ~ pred))$r.squared
}
names(cvs) <- names(r2s) <- sp
dat2 <-read.csv("final_results.csv")
fishes <- dat2$species[dat2$clade == "Actinopterygii"]
cvs <- cvs[names(cvs) %in% fishes]
r2s<-  r2s[names(r2s) %in% fishes]
plot(cvs~r2s)
dat <- as.data.frame(matrix(NA, 8, 5))
paste("plot", 1:5)
colnames(dat) <- paste("plot", 1:5)
rbinom(1, 8, prob=.5)
rbinom(1, 8, prob=.5)
rbinom(8, 1, prob=.5)
rbinom(24, 1, prob = .1)
rbinom(24, 1, prob = .1)
rbinom(24, 1, prob = .1)
rbinom(24, 1, prob = .1)
rbinom(24, 1, prob = .1)
dat$`plot 1` <- rbinom(24, 1, prob = .1)
dat <- as.data.frame(matrix(NA, 24, 5))
colnames(dat) <- paste("plot", 1:5)
dat$`plot 1` <- rbinom(24, 1, prob = .1)
dat$`plot 3` <- rbinom(24, 1, prob = .1)
dat$`plot 5` <- rbinom(24, 1, prob = .1)
dat$`plot 2` <- rbinom(24, 1, prob = .3)
dat$`plot 4` <- rbinom(24, 1, prob = .3)
View(dat)
View(dat)
emp.obs <- colSums(dat)
res <- matrix(NA, 1000, 5)
prob <- sum(dat)/120
foo <- matrix(rbinom(120, 1, prob=prob), 24, 5)
View(foo)
colSums(matrix(rbinom(120, 1, prob=prob), 24, 5))
emp.obs
colSums(matrix(rbinom(120, 1, prob=prob), 24, 5))
dat <- as.data.frame(matrix(NA, 24, 5))
colnames(dat) <- paste("plot", 1:5)
dat$`plot 1` <- rbinom(24, 1, prob = .1)
dat$`plot 3` <- rbinom(24, 1, prob = .1)
dat$`plot 5` <- rbinom(24, 1, prob = .1)
dat$`plot 2` <- rbinom(24, 1, prob = .3)
dat$`plot 4` <- rbinom(24, 1, prob = .3)
emp.obs <- colSums(dat)
res <- matrix(NA, 1000, 5)
prob <- sum(dat)/120
for(i in 1:1000){
res[i,] <- colSums(matrix(rbinom(120, 1, prob=prob), 24, 5))
}
View(res)
rbinom(120, 1, prob=prob)
matrix(rbinom(120, 1, prob=prob), 24, 5)
colSums(matrix(rbinom(120, 1, prob=prob), 24, 5))
sum(res[,1] >= emp.obs[1])/1000
sum(res[,2] >= emp.obs[2])/1000
sum(res[,3] >= emp.obs[3])/1000
sum(res[,4] >= emp.obs[4])/1000
sum(res[,5] >= emp.obs[5])/1000
install.packages("zeitgebr")
group <- rep(c("A","B","C","D"), each=200)
day <- rep(1:200, times=4)
group <- rep(c("A","B","C","D"), each=200)
day <- rep(1:200, times=4)
grpeff <- rep(0, 800)
grpeff[group == "C"] <- rnorm(200, mean = 2)
resp <- rnorm(200, mean = (5.7 + day/50)) + grpeff
group <- rep(c("A","B","C","D"), each=200)
day <- rep(1:200, times=4)
grpeff <- rep(0, 800)
grpeff[group == "C"] <- rnorm(200, mean = 2)
resp <- rnorm(200, mean = (5.7 + day/50)) + grpeff
plot(y=resp[1:200]~day[1:200])
plot(y=resp[1:200], x=day[1:200])
range(resp)
plot(y=resp[1:200], x=day[1:200], ylim=c(0,15))
plot(y=resp[1:200], x=day[1:200], ylim=c(0,15),type="l")
lines(y=resp[201:400], x=day[1:200])
group <- rep(c("A","B","C","D"), each=200)
day <- rep(1:200, times=4)
grpeff <- rep(0, 800)
grpeff[group == "C"] <- rnorm(200, mean = 2)
resp <- rnorm(800, mean = (5.7 + day/50)) + grpeff
plot(y=resp[1:200], x=day[1:200], ylim=c(0,15),type="l")
lines(y=resp[201:400], x=day[1:200])
lines(y=resp[401:600], x=day[1:200])
lines(y=resp[601:800], x=day[1:200])
grpeff[group == "C"] <- rnorm(200, mean = 3)
resp <- rnorm(800, mean = (5.7 + day/50)) + grpeff
plot(y=resp[1:200], x=day[1:200], ylim=c(0,15),type="l")
lines(y=resp[201:400], x=day[1:200])
lines(y=resp[401:600], x=day[1:200])
plot(y=resp[1:200], x=day[1:200], ylim=c(0,15),type="l", col="red")
lines(y=resp[201:400], x=day[1:200], col="blue")
lines(y=resp[401:600], x=day[1:200], col="darkgreen")
lines(y=resp[601:800], x=day[1:200], col="darkorange")
group <- rep(c("A","B","C","D"), each=200)
day <- rep(1:200, times=4)
grpeff <- rep(0, 800)
grpeff[group == "C"] <- rnorm(200, mean = 3, sd=.2)
resp <- rnorm(800, mean = (5.7 + day/50), sd=.3) + grpeff
plot(y=resp[1:200], x=day[1:200], ylim=c(0,15),type="l", col="red")
lines(y=resp[201:400], x=day[1:200], col="blue")
lines(y=resp[401:600], x=day[1:200], col="darkgreen")
lines(y=resp[601:800], x=day[1:200], col="darkorange")
group <- rep(c("A","B","C","D"), each=200)
day <- rep(1:200, times=4)
grpeff <- rep(0, 800)
grpeff[group == "C"] <- rnorm(200, mean = 3, sd=.4)
resp <- rnorm(800, mean = (5.7 + day/50), sd=.6) + grpeff
plot(y=resp[1:200], x=day[1:200], ylim=c(0,15),type="l", col="red")
lines(y=resp[201:400], x=day[1:200], col="blue")
lines(y=resp[401:600], x=day[1:200], col="darkgreen")
lines(y=resp[601:800], x=day[1:200], col="darkorange")
group <- rep(c("A","B","C","D"), each=200)
day <- rep(1:200, times=4)
grpeff <- rep(0, 800)
grpeff[group == "C"] <- rnorm(200, mean = 3, sd=.4)
resp <- rnorm(800, mean = (5.7 + day/50), sd=.6) + grpeff
plot(y=resp[1:200], x=day[1:200], ylim=c(0,15),type="l", col="red")
lines(y=resp[201:400], x=day[1:200], col="blue")
lines(y=resp[401:600], x=day[1:200], col="darkgreen")
lines(y=resp[601:800], x=day[1:200], col="darkorange")
group <- rep(c("A","B","C","D"), each=200)
day <- rep(1:200, times=4)
grpeff <- rep(0, 800)
grpeff[group == "C"] <- rnorm(200, mean = 3, sd=.4)
resp <- rnorm(800, mean = (5.7 + day/50), sd=.6) + grpeff
plot(y=resp[1:200], x=day[1:200], ylim=c(0,15),type="l", col="red")
lines(y=resp[201:400], x=day[1:200], col="blue")
lines(y=resp[401:600], x=day[1:200], col="darkgreen")
lines(y=resp[601:800], x=day[1:200], col="darkorange")
group <- rep(c("A","B","C","D"), each=200)
day <- rep(1:200, times=4)
grpeff <- rep(0, 800)
grpeff[group == "C"] <- rnorm(200, mean = 3, sd=.4)
resp <- rnorm(800, mean = (5.7 + day/50), sd=.6) + grpeff
plot(y=resp[1:200], x=day[1:200], ylim=c(0,15),type="l", col="red")
lines(y=resp[201:400], x=day[1:200], col="blue")
lines(y=resp[401:600], x=day[1:200], col="darkgreen")
lines(y=resp[601:800], x=day[1:200], col="darkorange")
group <- rep(c("A","B","C","D"), each=200)
day <- rep(1:200, times=4)
grpeff <- rep(0, 800)
grpeff[group == "C"] <- rnorm(200, mean = 3, sd=.4)
resp <- rnorm(800, mean = (5.7 + day/50), sd=.6) + grpeff
plot(y=resp[1:200], x=day[1:200], ylim=c(0,15),type="l", col="red")
lines(y=resp[201:400], x=day[1:200], col="blue")
lines(y=resp[401:600], x=day[1:200], col="darkgreen")
lines(y=resp[601:800], x=day[1:200], col="darkorange")
group <- rep(c("A","B","C","D"), each=200)
day <- rep(1:200, times=4)
grpeff <- rep(0, 800)
grpeff[group == "C"] <- rnorm(200, mean = 3, sd=.4)
resp <- rnorm(800, mean = (5.7 + day/50), sd=.6) + grpeff
plot(y=resp[1:200], x=day[1:200], ylim=c(0,15),type="l", col="red")
lines(y=resp[201:400], x=day[1:200], col="blue")
lines(y=resp[401:600], x=day[1:200], col="darkgreen")
lines(y=resp[601:800], x=day[1:200], col="darkorange")
dat <- data.frame(resp, group, day)
setwd("~/Desktop")
View(dat)
write.csv(dat, file = "foo.csv")
setwd("~/Desktop/github/coleoguy.github.io/teaching/expdes/data")
dat <- read.csv("birdmcmc1.csv")
View(dat)
plot(dat$p)
dat <- read.csv("birdmcmc2.csv")
plot(dat$p)
dat <- read.csv("birdmcmc3.csv")
plot(dat$p)
dat <- read.csv("birdmcmc3.csv")
plot(dat$p)
View(dat)
dat$asc1
range(dat$asc1)
plot(dat$asc1)
plot(dat$p)
plot(dat$asc1)
dat$asc1[1:1500] <- dat$asc1[1:1500] + rnorm(1500, mean=0.20, sd=.05)
plot(dat$asc1)
plot(dat$p)
dat$p[1:1500] <- dat$p[1:1500] + rnorm(1500, mean=-30, sd=5)
plot(dat$p)
dat$p[1:20] <- dat$p[1:20] + rnorm(20, mean=-10, sd=5)
plot(dat$asc1)
plot(dat$p)
write.csv(dat, file="birdmcmc3.csv", row.names = F)
dat <- read.csv("birdmcmc3.csv")
plot(dat$asc1)
plot(dat$p)
dat <- read.csv("birdmcmc3.csv")
plot(dat$asc1)
plot(dat$p)
plot(dat$asc1~dat$p)
dat <-read.csv("birdmcmc1.csv")
View(dat)
hist(dat$asc1-dat$asc2)
dat <-read.csv("birdmcmc2.csv")
View(dat)
hist(dat$asc1-dat$asc2)
hist(dat$desc1-dat$desc2)
mean(dat$asc1,dat$desc1)
sum(dat$asc1,dat$desc1)
(dat$asc1 + dat$desc1)
hist((dat$asc1 + dat$desc1) - (dat$desc2 + dat$asc2))
dif <- ((dat$asc1 + dat$desc1) - (dat$desc2 + dat$asc2))
plot(density(dif))
plot(density(dat$asc1 - dat$asc2))
plot(density(dat$desc1 - dat$desc2))
dat <-read.csv("birdmcmc3.csv")
dif <- ((dat$asc1 + dat$desc1) - (dat$desc2 + dat$asc2))
plot(density(dat$desc1 - dat$desc2))
plot(density(dat$asc1))
plot(density(dat$desc1))
plot(density(dat$desc1~dat$asc1))
hist(dat$desc1-dat$desc2)
plot(dat$desc1~dat$asc1)
plot(dat$desc1[2000:4000]~dat$asc1[2000:4000])
plot(dat$p)
plot(dat$p,type="l")
setwd("~/Desktop/github/coleoguy.github.io/teaching/expdes/data")
dat <- read.csv("birdmcmc1.csv")
plot(dat$p, type="l")
colnames(dat)
post <- dat[5001:10000,]
deltaR <- post$asc2-post$asc1
plot(density(deltaR))
dat <- read.csv("birdmcmc3.csv")
plot(dat$p)
plot(dat$p, type="l",lwd=.5)
View(dat)
plot(dat$desc1 ~ dat$p)
plot(dat$asc1 ~ dat$p)
plot(dat$asc1 ~ dat$p, type="b")
seq(from=0,to=.8,by=.1)
rep(seq(from=0,to=.8,by=.1), each=2)
x <- rep(seq(from=0,to=.8,by=.1), each=2)
y <- seq(from=0,to=.8,by=.1)
x1 <-
seq(from=0,to=1, length.out=length(y1))
y1 <- rep(seq(from=0,to=.8,by=.1), each=2)
y2 <- seq(from=0,to=.8,by=.1)
seq(from=0,to=1, length.out=length(y1))
x2 <- seq(from=0,to=1, length.out=length(y2))
plot(y1~x1)
y1 <- rep(seq(from=0,to=.8,by=.1), each=2)
y2 <- seq(from=0,to=.8,by=.1)
x1 <- seq(from=0,to=1, length.out=length(y1))
x2 <- seq(from=0,to=1, length.out=length(y2))
plot(y1~x1)
plot(y1~x1, type="b", pch=16, col="red")
lines(y2~x2, type="b", pch=16, col="blue")
y1 <- rep(seq(from=0,to=.8,by=.1), each=2)
y2 <- c(seq(from=0,to=1,by=.2),1,1,1)
x1 <- seq(from=0,to=1, length.out=length(y1))
x2 <- seq(from=0,to=1, length.out=length(y2))
plot(y1~x1, type="b", pch=16, col="red")
lines(y2~x2, type="b", pch=16, col="blue")
plot(y1~x1, type="b", pch=16, col="red",ylim=c(0,1))
lines(y2~x2, type="b", pch=16, col="blue")
y1 <- rep(seq(from=0,to=.8,by=.1), each=2)
y2 <- seq(from=0,to=.8,by=.1)
x1 <- seq(from=0,to=1, length.out=length(y1))
x2 <- seq(from=0,to=1, length.out=length(y2))
plot(y1~x1, type="b", pch=16, col="red",ylim=c(0,1))
lines(y2~x2, type="b", pch=16, col="blue")
y1 <- rep(seq(from=0,to=.8,by=.1), each=2)
y2 <- c(seq(from=0,to=1,by=.2),1,1,1)
x1 <- seq(from=0,to=1, length.out=length(y1))
x2 <- seq(from=0,to=1, length.out=length(y2))
plot(y1~x1, type="b", pch=16, col="red",ylim=c(0,1))
lines(y2~x2, type="b", pch=16, col="blue")
# Lets open the first MCMC file and give it a look
dat <- read.csv("birdmcmc1.csv")
plot(dat$p, type="l")
View(dat)
knitr::opts_chunk$set(echo = TRUE)
post <- dat1[5001:1000,]
post <- dat[5001:1000,]
post <- dat[5001:10000,]
dat1 <- read.csv("birdmcmc1.csv")
dat2 <- read.csv("birdmcmc2.csv")
dat3 <- read.csv("birdmcmc3.csv")
plot(dat3$asc1)
# if we throw away the burnin we get
mean(dat3$asc1[2001:4000])
# if we faile to throw away the burnin we get
mean(dat3$asc1)
View(dat2)
plot(density(dat2$asc1 - dat2$asc2))
plot(density(dat1$asc1 - dat2$asc2))
plot(density(dat1$desc1 - dat2$desc2))
library(coda)
HPDinterval(as.mcmc(dat1$asc1))
HPDinterval(as.mcmc(dat1$asc2))
asc1 <- HPDinterval(as.mcmc(dat1$asc1))[1:2]
asc1 <- HPDinterval(as.mcmc(dat1$asc1))[1:2]
asc2 <- HPDinterval(as.mcmc(dat1$asc2))[1:2]
HPDinterval(as.mcmc(dat1$asc1[5001:10000]))
HPDinterval(as.mcmc(dat1$asc2[5001:10000]))
plot(density(dat1$asc1[5001:10000]))
plot(density(dat1$asc1[5001:10000]),main="")
plot(density(dat1$asc1[5001:10000]),main="", xlab="fission rate")
lines(density(dat1$asc2[5001:10000]))
plot(density(dat1$asc1[5001:10000]),main="", xlab="fission rate")
lines(density(dat1$asc2[5001:10000]))
plot(density(dat1$asc1[5001:10000]),main="", xlab="fission rate", xlim=c(0,70))
plot(density(dat1$asc1[5001:10000]),main="", xlab="fission rate", xlim=c(0,70))
lines(density(dat1$asc2[5001:10000]))
plot(density(dat1$asc1[5001:10000]),main="", xlab="fission rate", xlim=c(0,70),
ylim=c(0,1))
lines(density(dat1$asc2[5001:10000]))
plot(density(dat1$asc1[5001:10000]),main="", xlab="fission rate", xlim=c(0,70),
ylim=c(0,.7))
lines(density(dat1$asc2[5001:10000]))
plot(density(dat1$asc1[5001:10000]),main="", xlab="fission rate", xlim=c(0,70),
ylim=c(-0.1,.7))
lines(density(dat1$asc2[5001:10000]))
plot(density(dat1$asc1[5001:10000]),main="", xlab="fission rate", xlim=c(0,70),
ylim=c(-0.1,.7))
lines(density(dat1$asc2[5001:10000]))
polygon(density(dat1$asc1[5001:10000]),col=rgb(1,0,0,.5)
plot(density(dat1$asc1[5001:10000]),main="", xlab="fission rate", xlim=c(0,70),
ylim=c(-0.1,.7))
lines(density(dat1$asc2[5001:10000]))
polygon(density(dat1$asc1[5001:10000]),col=rgb(1,0,0,.5))
plot(density(dat1$asc1[5001:10000]),main="", xlab="fission rate", xlim=c(0,70),
ylim=c(-0.1,.7))
lines(density(dat1$asc2[5001:10000]))
polygon(density(dat1$asc1[5001:10000]),col=rgb(1,0,0,.5))
polygon(density(dat1$asc2[5001:10000]),col=rgb(0,1,0,.5))
plot(density(dat1$asc1[5001:10000]),main="", xlab="fission rate", xlim=c(0,70),
ylim=c(-0.1,.7))
lines(density(dat1$asc2[5001:10000]))
polygon(density(dat1$asc1[5001:10000]),col=rgb(1,0,0,.5))
polygon(density(dat1$asc2[5001:10000]),col=rgb(0,1,0,.5))
lines(x=asc1,y=c(-.025,.025))
plot(density(dat1$asc1[5001:10000]),main="", xlab="fission rate", xlim=c(0,70),
ylim=c(-0.1,.7))
lines(density(dat1$asc2[5001:10000]))
polygon(density(dat1$asc1[5001:10000]),col=rgb(1,0,0,.5))
polygon(density(dat1$asc2[5001:10000]),col=rgb(0,1,0,.5))
lines(x=asc1,y=c(-.025,-.025),lwd=3,col=rgb(1,0,0,.5))
plot(density(dat1$asc1[5001:10000]),main="", xlab="fission rate", xlim=c(0,70),
ylim=c(-0.1,.7))
lines(density(dat1$asc2[5001:10000]))
polygon(density(dat1$asc1[5001:10000]),col=rgb(1,0,0,.5))
polygon(density(dat1$asc2[5001:10000]),col=rgb(0,1,0,.5))
lines(x=asc1,y=c(-.025,-.025),lwd=3,col=rgb(1,0,0,.5))
lines(x=asc2,y=c(-.025,-.025),lwd=3,col=rgb(0,1,0,.5))
plot(density(dat1$asc1[5001:10000]),main="", xlab="fission rate", xlim=c(0,70),
ylim=c(-0.05,.7))
lines(density(dat1$asc2[5001:10000]))
polygon(density(dat1$asc1[5001:10000]),col=rgb(1,0,0,.5))
polygon(density(dat1$asc2[5001:10000]),col=rgb(0,1,0,.5))
lines(x=asc1,y=c(-.025,-.025),lwd=3,col=rgb(1,0,0,.5))
lines(x=asc2,y=c(-.025,-.025),lwd=3,col=rgb(0,1,0,.5))
knitr::opts_chunk$set(echo = TRUE)
library(coda)
asc1 <- HPDinterval(as.mcmc(dat1$asc1[5001:10000]))[1:2]
asc2 <- HPDinterval(as.mcmc(dat1$asc2[5001:10000]))[1:2]
plot(density(dat1$asc1[5001:10000]),main="", xlab="fission rate", xlim=c(0,70),
ylim=c(-0.05,.7))
lines(density(dat1$asc2[5001:10000]))
polygon(density(dat1$asc1[5001:10000]),col=rgb(1,0,0,.5))
polygon(density(dat1$asc2[5001:10000]),col=rgb(0,1,0,.5))
lines(x=asc1,y=c(-.025,-.025),lwd=3,col=rgb(1,0,0,.5))
lines(x=asc2,y=c(-.025,-.025),lwd=3,col=rgb(0,1,0,.5))
points(x=c(50,50),y=c(.7,.6), col=c(rgb(1,0,0,.5),rgb(0,1,0,.5))
plot(density(dat1$asc1[5001:10000]),main="", xlab="fission rate", xlim=c(0,70),
plot(density(dat1$asc1[5001:10000]),main="", xlab="fission rate", xlim=c(0,70),
ylim=c(-0.05,.7))
lines(density(dat1$asc2[5001:10000]))
polygon(density(dat1$asc1[5001:10000]),col=rgb(1,0,0,.5))
polygon(density(dat1$asc2[5001:10000]),col=rgb(0,1,0,.5))
lines(x=asc1,y=c(-.025,-.025),lwd=3,col=rgb(1,0,0,.5))
lines(x=asc2,y=c(-.025,-.025),lwd=3,col=rgb(0,1,0,.5))
points(x=c(50,50),y=c(.7,.6), col=c(rgb(1,0,0,.5),rgb(0,1,0,.5)),pch=16)
plot(density(dat1$asc1[5001:10000]),main="", xlab="fission rate", xlim=c(0,70),
ylim=c(-0.05,.7))
lines(density(dat1$asc2[5001:10000]))
polygon(density(dat1$asc1[5001:10000]),col=rgb(1,0,0,.5))
polygon(density(dat1$asc2[5001:10000]),col=rgb(0,1,0,.5))
lines(x=asc1,y=c(-.025,-.025),lwd=3,col=rgb(1,0,0,.5))
lines(x=asc2,y=c(-.025,-.025),lwd=3,col=rgb(0,1,0,.5))
points(x=c(50,50),y=c(.65,.6), col=c(rgb(1,0,0,.5),rgb(0,1,0,.5)),pch=15)
asc1 <- HPDinterval(as.mcmc(dat1$asc1[5001:10000]))[1:2]
asc2 <- HPDinterval(as.mcmc(dat1$asc2[5001:10000]))[1:2]
plot(density(dat1$asc1[5001:10000]),main="", xlab="fission rate", xlim=c(0,70),
ylim=c(-0.05,.7))
lines(density(dat1$asc2[5001:10000]))
polygon(density(dat1$asc1[5001:10000]),col=rgb(1,0,0,.5))
polygon(density(dat1$asc2[5001:10000]),col=rgb(0,1,0,.5))
lines(x=asc1,y=c(-.025,-.025),lwd=3,col=rgb(1,0,0,.5))
lines(x=asc2,y=c(-.025,-.025),lwd=3,col=rgb(0,1,0,.5))
points(x=c(50,50),y=c(.65,.6), col=c(rgb(1,0,0,.5),rgb(0,1,0,.5)),pch=15)
text(x=c(50,50),y=c(.65,.6), c("State 1", "State 2"), pos=3, cex=.7)
plot(density(dat1$asc1[5001:10000]),main="", xlab="fission rate", xlim=c(0,70),
ylim=c(-0.05,.7))
lines(density(dat1$asc2[5001:10000]))
polygon(density(dat1$asc1[5001:10000]),col=rgb(1,0,0,.5))
polygon(density(dat1$asc2[5001:10000]),col=rgb(0,1,0,.5))
lines(x=asc1,y=c(-.025,-.025),lwd=3,col=rgb(1,0,0,.5))
lines(x=asc2,y=c(-.025,-.025),lwd=3,col=rgb(0,1,0,.5))
points(x=c(50,50),y=c(.65,.6), col=c(rgb(1,0,0,.5),rgb(0,1,0,.5)),pch=15)
text(x=c(50,50),y=c(.65,.6), c("State 1", "State 2"), pos=4, cex=.7)
library(ggraptR)
install.packages("ggraptR")
library(ggraptR)
ggraptR(dat1)
# complex
dat <- read.csv("betta_splendens.csv")
# complex
dat <- read.csv("betta_splendens.csv")
ggraptR(dat)
install.packages(c("askpass", "bit", "bit64", "bitops", "boot", "broom", "bslib", "commonmark", "cpp11", "credentials", "curl", "data.table", "evaluate", "expm", "foreign", "fs", "gert", "gtable", "httr2", "igraph", "jsonlite", "knitr", "maps", "Matrix", "mvtnorm", "openssl", "phangorn", "pkgbuild", "pkgdown", "profvis", "ps", "ragg", "Rcpp", "RcppArmadillo", "renv", "rmarkdown", "rsconnect", "rstudioapi", "segmented", "shiny", "sys", "tinytex", "usethis", "uuid", "waldo", "withr", "xfun", "yaml"))
install.packages(c("askpass", "bit", "bit64", "bitops", "boot", "broom", "bslib", "commonmark", "cpp11", "credentials", "curl", "data.table", "evaluate", "expm", "foreign", "fs", "gert", "gtable", "httr2", "igraph", "jsonlite", "knitr", "maps", "Matrix", "mvtnorm", "openssl", "phangorn", "pkgbuild", "pkgdown", "profvis", "ps", "ragg", "Rcpp", "RcppArmadillo", "renv", "rmarkdown", "rsconnect", "rstudioapi", "segmented", "shiny", "sys", "tinytex", "usethis", "uuid", "waldo", "withr", "xfun", "yaml"))
install.packages(c("askpass", "bit", "bit64", "bitops", "boot", "broom", "bslib", "commonmark", "cpp11", "credentials", "curl", "data.table", "evaluate", "expm", "foreign", "fs", "gert", "gtable", "httr2", "igraph", "jsonlite", "knitr", "maps", "Matrix", "mvtnorm", "openssl", "phangorn", "pkgbuild", "pkgdown", "profvis", "ps", "ragg", "Rcpp", "RcppArmadillo", "renv", "rmarkdown", "rsconnect", "rstudioapi", "segmented", "shiny", "sys", "tinytex", "usethis", "uuid", "waldo", "withr", "xfun", "yaml"))
install.packages(c("askpass", "bit", "bit64", "bitops", "boot", "broom", "bslib", "commonmark", "cpp11", "credentials", "curl", "data.table", "evaluate", "expm", "foreign", "fs", "gert", "gtable", "httr2", "igraph", "jsonlite", "knitr", "maps", "Matrix", "mvtnorm", "openssl", "phangorn", "pkgbuild", "pkgdown", "profvis", "ps", "ragg", "Rcpp", "RcppArmadillo", "renv", "rmarkdown", "rsconnect", "rstudioapi", "segmented", "shiny", "sys", "tinytex", "usethis", "uuid", "waldo", "withr", "xfun", "yaml"))
install.packages(c("askpass", "bit", "bit64", "bitops", "boot", "broom", "bslib", "commonmark", "cpp11", "credentials", "curl", "data.table", "evaluate", "expm", "foreign", "fs", "gert", "gtable", "httr2", "igraph", "jsonlite", "knitr", "maps", "Matrix", "mvtnorm", "openssl", "phangorn", "pkgbuild", "pkgdown", "profvis", "ps", "ragg", "Rcpp", "RcppArmadillo", "renv", "rmarkdown", "rsconnect", "rstudioapi", "segmented", "shiny", "sys", "tinytex", "usethis", "uuid", "waldo", "withr", "xfun", "yaml"))
install.packages(c("askpass", "bit", "bit64", "bitops", "boot", "broom", "bslib", "commonmark", "cpp11", "credentials", "curl", "data.table", "evaluate", "expm", "foreign", "fs", "gert", "gtable", "httr2", "igraph", "jsonlite", "knitr", "maps", "Matrix", "mvtnorm", "openssl", "phangorn", "pkgbuild", "pkgdown", "profvis", "ps", "ragg", "Rcpp", "RcppArmadillo", "renv", "rmarkdown", "rsconnect", "rstudioapi", "segmented", "shiny", "sys", "tinytex", "usethis", "uuid", "waldo", "withr", "xfun", "yaml"))
install.packages(c("askpass", "bit", "bit64", "bitops", "boot", "broom", "bslib", "commonmark", "cpp11", "credentials", "curl", "data.table", "evaluate", "expm", "foreign", "fs", "gert", "gtable", "httr2", "igraph", "jsonlite", "knitr", "maps", "Matrix", "mvtnorm", "openssl", "phangorn", "pkgbuild", "pkgdown", "profvis", "ps", "ragg", "Rcpp", "RcppArmadillo", "renv", "rmarkdown", "rsconnect", "rstudioapi", "segmented", "shiny", "sys", "tinytex", "usethis", "uuid", "waldo", "withr", "xfun", "yaml"))
install.packages(c("askpass", "bit", "bit64", "bitops", "boot", "broom", "bslib", "commonmark", "cpp11", "credentials", "curl", "data.table", "evaluate", "expm", "foreign", "fs", "gert", "gtable", "httr2", "igraph", "jsonlite", "knitr", "maps", "Matrix", "mvtnorm", "openssl", "phangorn", "pkgbuild", "pkgdown", "profvis", "ps", "ragg", "Rcpp", "RcppArmadillo", "renv", "rmarkdown", "rsconnect", "rstudioapi", "segmented", "shiny", "sys", "tinytex", "usethis", "uuid", "waldo", "withr", "xfun", "yaml"))
install.packages(c("askpass", "bit", "bit64", "bitops", "boot", "broom", "bslib", "commonmark", "cpp11", "credentials", "curl", "data.table", "evaluate", "expm", "foreign", "fs", "gert", "gtable", "httr2", "igraph", "jsonlite", "knitr", "maps", "Matrix", "mvtnorm", "openssl", "phangorn", "pkgbuild", "pkgdown", "profvis", "ps", "ragg", "Rcpp", "RcppArmadillo", "renv", "rmarkdown", "rsconnect", "rstudioapi", "segmented", "shiny", "sys", "tinytex", "usethis", "uuid", "waldo", "withr", "xfun", "yaml"))
install.packages(c("askpass", "bit", "bit64", "bitops", "boot", "broom", "bslib", "commonmark", "cpp11", "credentials", "curl", "data.table", "evaluate", "expm", "foreign", "fs", "gert", "gtable", "httr2", "igraph", "jsonlite", "knitr", "maps", "Matrix", "mvtnorm", "openssl", "phangorn", "pkgbuild", "pkgdown", "profvis", "ps", "ragg", "Rcpp", "RcppArmadillo", "renv", "rmarkdown", "rsconnect", "rstudioapi", "segmented", "shiny", "sys", "tinytex", "usethis", "uuid", "waldo", "withr", "xfun", "yaml"))
install.packages(c("askpass", "bit", "bit64", "bitops", "boot", "broom", "bslib", "commonmark", "cpp11", "credentials", "curl", "data.table", "evaluate", "expm", "foreign", "fs", "gert", "gtable", "httr2", "igraph", "jsonlite", "knitr", "maps", "Matrix", "mvtnorm", "openssl", "phangorn", "pkgbuild", "pkgdown", "profvis", "ps", "ragg", "Rcpp", "RcppArmadillo", "renv", "rmarkdown", "rsconnect", "rstudioapi", "segmented", "shiny", "sys", "tinytex", "usethis", "uuid", "waldo", "withr", "xfun", "yaml"))
install.packages(c("askpass", "bit", "bit64", "bitops", "boot", "broom", "bslib", "commonmark", "cpp11", "credentials", "curl", "data.table", "evaluate", "expm", "foreign", "fs", "gert", "gtable", "httr2", "igraph", "jsonlite", "knitr", "maps", "Matrix", "mvtnorm", "openssl", "phangorn", "pkgbuild", "pkgdown", "profvis", "ps", "ragg", "Rcpp", "RcppArmadillo", "renv", "rmarkdown", "rsconnect", "rstudioapi", "segmented", "shiny", "sys", "tinytex", "usethis", "uuid", "waldo", "withr", "xfun", "yaml"))
install.packages(c("askpass", "bit", "bit64", "bitops", "boot", "broom", "bslib", "commonmark", "cpp11", "credentials", "curl", "data.table", "evaluate", "expm", "foreign", "fs", "gert", "gtable", "httr2", "igraph", "jsonlite", "knitr", "maps", "Matrix", "mvtnorm", "openssl", "phangorn", "pkgbuild", "pkgdown", "profvis", "ps", "ragg", "Rcpp", "RcppArmadillo", "renv", "rmarkdown", "rsconnect", "rstudioapi", "segmented", "shiny", "sys", "tinytex", "usethis", "uuid", "waldo", "withr", "xfun", "yaml"))
install.packages(c("askpass", "bit", "bit64", "bitops", "boot", "broom", "bslib", "commonmark", "cpp11", "credentials", "curl", "data.table", "evaluate", "expm", "foreign", "fs", "gert", "gtable", "httr2", "igraph", "jsonlite", "knitr", "maps", "Matrix", "mvtnorm", "openssl", "phangorn", "pkgbuild", "pkgdown", "profvis", "ps", "ragg", "Rcpp", "RcppArmadillo", "renv", "rmarkdown", "rsconnect", "rstudioapi", "segmented", "shiny", "sys", "tinytex", "usethis", "uuid", "waldo", "withr", "xfun", "yaml"))
library(ggraptR)
# complex
dat <- read.csv("betta_splendens.csv")
ggraptR(dat)
install.packages('ggraptR', dependencies=TRUE)
install.packages('ggraptR', dependencies=TRUE)
install.packages("ggraptR", dependencies = TRUE)
install.packages("ggraptR", dependencies = TRUE)
# complex
dat <- read.csv("betta_splendens.csv")
ggraptR(dat)
library(ggraptR)
ggraptR(dat)
